2024-05-29T21:28:08.187+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:08.205+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:08.207+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:08.208+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:08.208+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.208+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.209+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.209+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.210+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.210+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.211+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.211+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.211+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.212+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.212+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.212+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.212+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.212+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.213+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.213+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.213+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.214+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.214+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.215+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.215+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.215+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.216+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.216+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:08.216+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:08.217+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:08.217+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:08.217+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.217+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.217+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.218+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.218+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.219+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.221+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.222+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.222+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.223+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.223+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.223+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.223+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.225+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.225+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.225+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.226+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.226+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.226+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.227+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.227+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.228+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:08.228+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:08.228+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.228+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.229+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.230+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.230+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.231+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.231+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.231+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.232+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.232+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.232+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.233+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.233+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.234+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.235+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.235+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.235+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.236+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.236+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.236+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.237+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.237+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.237+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.238+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.238+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.239+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.239+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.242+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.242+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.243+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.243+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.243+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.244+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.244+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.244+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=17, name=Table 17, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:08.245+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:08.247+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:08.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:08.249+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:08.250+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:08.250+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.250+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.251+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.251+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.252+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.253+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.254+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.254+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.255+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.255+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.255+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.256+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.256+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.257+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.258+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.258+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.258+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.259+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.260+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.260+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.260+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.261+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.261+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:08.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:08.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:08.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:08.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.263+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.263+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.264+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.264+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.265+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.265+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.266+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.266+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.267+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:08.267+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.268+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.268+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.268+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.269+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.270+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:08.270+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.270+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.270+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.270+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.272+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:08.272+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:08.272+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.272+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.272+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.273+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.273+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.273+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.274+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.274+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.275+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.275+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.275+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.276+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.276+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.276+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.277+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.277+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.278+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.279+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.280+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.280+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.281+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.281+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.282+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.282+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.283+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.283+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.283+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.285+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.285+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.286+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.286+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.286+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.286+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:08.286+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:08.287+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=17, name=Table 17, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:08.287+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:10.187+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:10.187+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:10.188+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:10.189+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:10.189+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.189+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.190+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.190+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.191+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.191+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.192+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.192+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.192+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.193+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.193+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.193+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.195+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.195+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.195+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.196+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.196+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.196+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.197+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.197+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.197+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.198+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.199+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.199+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:10.200+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:10.200+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:10.200+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:10.200+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.200+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.201+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.201+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.201+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.202+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.202+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.202+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.202+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.203+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.203+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.203+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.204+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.204+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.204+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.204+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.205+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.205+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.205+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.205+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.206+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.206+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:10.206+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:10.206+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.206+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.207+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.207+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.207+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.208+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.208+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.208+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.209+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.209+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.209+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.209+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.210+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.210+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.210+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.210+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.211+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.211+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.211+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.212+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.212+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.212+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.212+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.213+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.213+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.213+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.214+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.214+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.214+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.215+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.215+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.215+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.215+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.216+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.216+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=17, name=Table 17, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:10.217+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:10.217+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:10.217+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:10.218+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:10.219+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:10.219+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.219+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.220+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.220+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.220+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.221+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.221+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.221+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.222+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.222+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.222+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.222+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.223+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.223+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.223+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.224+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.224+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.224+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.225+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.225+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.225+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.226+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.226+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.226+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:10.227+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:10.227+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:10.227+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:10.227+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.227+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.228+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.228+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.228+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.229+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.229+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.230+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.230+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.230+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.231+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:10.231+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.231+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.231+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.232+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.232+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.232+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:10.233+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.233+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.233+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.233+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.235+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:10.235+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:10.235+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.235+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.236+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.236+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.236+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.237+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.237+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.240+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.241+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.241+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.241+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.242+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.242+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.242+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.242+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.243+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.243+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.243+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.244+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.244+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.245+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.245+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.245+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.246+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.246+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.246+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.247+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.247+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.247+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:10.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:10.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=17, name=Table 17, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:10.249+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:19.993+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : OPTIONS "/tables/17", parameters={}
2024-05-29T21:28:19.993+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#updateTable(Long, Table)
2024-05-29T21:28:19.994+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:19.995+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : PUT "/tables/17", parameters={}
2024-05-29T21:28:19.996+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#updateTable(Long, Table)
2024-05-29T21:28:19.998+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [Table(id=17, name=Table_17, seats_amount=4, status=Empty_Now, orders=[], reservations=[])]
2024-05-29T21:28:20.000+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:28:20.000+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.001+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.001+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.015+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    update
        _table 
    set
        name=?,
        seats_amount=?,
        status=? 
    where
        id=?
2024-05-29T21:28:20.019+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:20.019+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [Table(id=17, name=Table_17, seats_amount=4, status=Empty_Now, orders=[], reservations=[])]
2024-05-29T21:28:20.021+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:20.408+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:20.408+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:20.409+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:20.410+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:20.410+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.411+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.411+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.412+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.412+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.413+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.413+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.413+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.415+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.416+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.416+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.417+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.417+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.418+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.418+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.419+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.419+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.419+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.420+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.420+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.421+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:20.421+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:20.421+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:20.422+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:20.422+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.422+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.424+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.424+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.424+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.425+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.426+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.426+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.426+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.427+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.427+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.427+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.428+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.428+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.428+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.428+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.429+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.429+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.429+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.430+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.430+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.430+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:20.430+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:20.431+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.431+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.431+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.432+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.432+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.432+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.433+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.433+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.433+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.434+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.434+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.435+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.435+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.435+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.435+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.436+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.436+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.436+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.437+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.437+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.437+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.438+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.438+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.438+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.439+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.439+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.439+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.440+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.440+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.440+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.441+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.441+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.441+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.441+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.441+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.442+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.442+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.442+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:20.443+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:20.444+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:20.444+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:20.445+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:20.445+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:20.446+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.446+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.446+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.447+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.447+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.448+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.448+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.448+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.449+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.449+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.449+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.450+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.450+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.450+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.451+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.451+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.452+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.452+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.453+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.453+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.453+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:20.453+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:20.453+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:20.453+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:20.454+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.454+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.454+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.454+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.455+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.455+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.456+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.456+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.456+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.457+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.457+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:20.457+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.458+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.458+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.458+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.459+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.459+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:20.459+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.460+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.460+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.460+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.461+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:20.461+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:20.461+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.461+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.462+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.462+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.462+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.463+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.463+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.463+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.463+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.465+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.465+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.465+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.466+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.466+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.466+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.467+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.467+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.467+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.468+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.468+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.468+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.468+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.469+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.469+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.469+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.470+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.470+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.470+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.470+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.471+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.471+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.471+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.472+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.472+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.472+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:20.472+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.472+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:20.473+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:20.474+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:30.834+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : OPTIONS "/tables/2", parameters={}
2024-05-29T21:28:30.835+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#updateTable(Long, Table)
2024-05-29T21:28:30.835+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:30.836+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : PUT "/tables/2", parameters={}
2024-05-29T21:28:30.836+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#updateTable(Long, Table)
2024-05-29T21:28:30.837+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [Table(id=2, name=2 testing again, seats_amount=null, status=Empty_Now, orders=[], reservations=[])]
2024-05-29T21:28:30.838+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:28:30.838+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:30.839+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:30.839+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:30.840+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:30.840+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:30.840+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:30.840+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:30.841+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:30.841+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:30.842+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:30.842+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:30.842+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:30.843+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:30.843+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:30.844+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:30.845+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:30.845+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:30.845+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:30.846+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:30.847+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:30.847+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:30.848+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:30.848+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:30.849+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:30.850+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:30.850+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:30.851+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:30.851+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:30.855+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    update
        _table 
    set
        name=?,
        seats_amount=?,
        status=? 
    where
        id=?
2024-05-29T21:28:30.856+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:30.857+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [Table(id=2, name=2 testing again, seats_amount=null, status=Empty_Now, orders=[], reservations=[])]
2024-05-29T21:28:30.857+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:31.220+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:31.220+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:31.223+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:31.225+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:31.225+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.226+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.227+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.227+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.228+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.228+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.229+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.229+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.230+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.231+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.231+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.232+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.233+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.233+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.233+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.234+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.234+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.236+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.237+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.237+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.237+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:31.238+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:31.238+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:31.238+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:31.239+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.239+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.239+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.240+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.241+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.241+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.242+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.242+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.243+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.243+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.244+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.244+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.244+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.245+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.245+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.246+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.246+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.246+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.247+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.247+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.247+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:31.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:31.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.248+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.249+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.249+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.249+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.250+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.250+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.251+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.251+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.253+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.253+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.253+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.253+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.253+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.255+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.255+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.255+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.256+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.256+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.257+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.257+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.258+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.258+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.258+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.259+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.259+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.260+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.260+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.260+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.261+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.262+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.263+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.263+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:31.264+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:31.265+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:31.265+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:31.267+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:31.268+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:31.268+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.268+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.269+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.270+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.270+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.271+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.272+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.272+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.273+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.274+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.274+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.275+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.276+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.276+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.277+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.277+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.278+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.278+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.279+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.279+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.280+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:31.280+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:31.280+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:31.280+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:31.281+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.281+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.281+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.282+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.282+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.283+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.283+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.284+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.284+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.285+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.285+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:31.286+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.286+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.286+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.287+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.287+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.288+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:31.288+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.289+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.289+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.290+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.291+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:31.291+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:31.291+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.291+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.292+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.293+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.293+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.295+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.295+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.296+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.296+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.297+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.297+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.298+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.298+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.299+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.299+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.299+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.300+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.301+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.301+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.301+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.302+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.302+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.302+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.302+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.308+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.308+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.309+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.309+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.309+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.310+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.310+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.311+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.311+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.311+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.311+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:31.311+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.312+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:31.313+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:31.315+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:39.553+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : PUT "/tables/2", parameters={}
2024-05-29T21:28:39.554+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#updateTable(Long, Table)
2024-05-29T21:28:39.555+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [Table(id=2, name=2 testing again, seats_amount=-2, status=Empty_Now, orders=[], reservations=[])]
2024-05-29T21:28:39.555+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:28:39.556+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.556+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:39.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:39.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.558+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.558+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.558+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.559+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.559+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.559+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.559+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.560+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.563+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.563+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.564+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.564+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.564+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.564+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.567+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    update
        _table 
    set
        name=?,
        seats_amount=?,
        status=? 
    where
        id=?
2024-05-29T21:28:39.568+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:39.568+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [Table(id=2, name=2 testing again, seats_amount=-2, status=Empty_Now, orders=[], reservations=[])]
2024-05-29T21:28:39.569+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:39.623+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:39.623+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:39.625+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:39.626+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:39.627+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.627+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.629+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.629+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.630+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.630+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.631+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.632+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.632+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.634+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.634+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.635+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.635+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.636+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.637+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.637+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.637+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.638+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.638+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.638+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.639+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:39.639+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:39.639+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.640+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.640+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.640+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.641+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.641+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.641+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.642+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.642+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.642+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.643+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.643+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.643+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.644+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.644+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.644+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.644+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.645+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.645+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.645+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.646+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.646+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.646+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.647+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.647+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.647+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.647+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.647+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.648+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.648+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.650+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.650+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.650+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.651+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.651+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.651+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.652+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.653+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.653+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.653+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.654+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.654+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.654+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.655+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.655+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.655+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.656+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.656+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.656+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.657+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.657+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.657+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.658+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.658+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.659+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.659+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.659+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.659+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.660+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.660+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.660+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.661+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.661+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:39.662+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:28:39.663+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:28:39.664+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:28:39.665+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:28:39.666+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:28:39.667+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.667+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.668+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.669+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.669+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.670+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.670+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.671+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.672+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.672+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.672+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.673+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.674+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.674+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.675+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.677+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.678+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.678+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.678+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:39.679+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:28:39.679+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.679+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.679+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.679+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.681+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.681+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.682+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.682+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.682+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:28:39.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.684+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.684+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.684+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.685+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.685+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:28:39.685+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.685+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.686+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.686+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.686+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.686+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:28:39.687+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.687+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.687+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.688+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.690+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.690+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.690+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.691+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.691+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.691+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.692+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.692+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.692+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.694+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.694+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.694+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.695+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.695+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.695+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.696+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.696+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.696+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.697+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.697+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.697+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.698+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.698+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.698+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:28:39.698+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.699+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:28:39.699+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:28:39.700+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:29:16.661+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : OPTIONS "/tables/3", parameters={}
2024-05-29T21:29:16.662+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#updateTable(Long, Table)
2024-05-29T21:29:16.662+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:29:16.663+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : PUT "/tables/3", parameters={}
2024-05-29T21:29:16.663+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#updateTable(Long, Table)
2024-05-29T21:29:16.665+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [Table(id=3, name=Table 3, seats_amount=3, status=Empty_Now, orders=[], reservations=[])]
2024-05-29T21:29:16.665+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:29:16.666+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:16.666+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:16.667+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:29:16.667+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:29:16.668+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:16.668+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:16.668+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:16.668+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:16.669+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:16.669+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:16.670+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:16.670+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:16.670+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:16.671+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:16.671+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:16.672+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:16.672+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:16.672+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:16.673+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:16.673+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:16.673+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:16.674+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:16.674+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:16.675+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:16.675+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:16.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:16.677+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:16.677+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:16.677+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:16.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:29:16.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [Table(id=3, name=Table 3, seats_amount=3, status=Empty_Now, orders=[], reservations=[])]
2024-05-29T21:29:16.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:29:17.045+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:29:17.045+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:29:17.048+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:29:17.050+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:29:17.050+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.050+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.051+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.052+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.052+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.052+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.053+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.053+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.054+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.055+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.055+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.056+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.057+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.057+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.058+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.059+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.059+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.060+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.060+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.061+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.061+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:29:17.062+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:29:17.062+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:17.062+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:17.062+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.063+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.063+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.063+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.067+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.067+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.068+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.068+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.069+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.069+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.069+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.070+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.070+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.070+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.071+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.071+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.071+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.072+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.072+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.072+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.073+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.074+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:17.074+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:17.074+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.074+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.075+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.076+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.076+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.077+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.077+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.078+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.078+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.079+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.079+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.079+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.080+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.080+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.080+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.081+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.081+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.081+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.081+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.083+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.083+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.083+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.084+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.085+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.085+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.085+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.086+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.087+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.087+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.087+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.088+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.088+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.088+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.089+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.089+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.089+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.090+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.090+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:29:17.091+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:29:17.092+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:29:17.092+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:29:17.093+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:29:17.093+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:29:17.094+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.094+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.094+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.095+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.095+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.096+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.096+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.096+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.098+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.098+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.098+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.099+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.099+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.099+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.100+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.100+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.101+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.101+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.102+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.102+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.103+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:29:17.103+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:29:17.103+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:17.104+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:17.104+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.104+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.105+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.105+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.106+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.106+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.107+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.107+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.107+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.108+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.108+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:29:17.108+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.109+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.109+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.109+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.110+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.110+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:29:17.111+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.111+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.111+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.112+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.112+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:17.113+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:29:17.113+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.113+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.113+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.114+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.114+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.115+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.115+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.115+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.116+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.116+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.116+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.117+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.118+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.118+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.118+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.119+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.119+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.120+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.120+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.120+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.121+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.121+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.122+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.123+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.123+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.123+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.124+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.124+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.124+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.125+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.126+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.126+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.126+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.126+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.127+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:29:17.127+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.127+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:29:17.128+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:29:17.128+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:23.668+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-05-29T21:30:23.668+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-05-29T21:30:23.673+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-05-29T21:30:23.674+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-05-29T21:30:23.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-05-29T21:30:23.678+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-05-29T21:30:23.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:23.681+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.681+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.682+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:23.682+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:23.682+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.682+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.682+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.684+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.685+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.685+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.685+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.686+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.686+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.686+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.686+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.688+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.688+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.690+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.690+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:23.691+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:23.692+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.692+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-05-29T21:30:23.704+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:23.706+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-05-29T21:30:23.706+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-05-29T21:30:23.707+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-05-29T21:30:23.708+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-05-29T21:30:23.710+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-05-29T21:30:23.711+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-05-29T21:30:23.712+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:23.712+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.712+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.712+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:23.712+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:23.712+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.712+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.712+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.713+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.713+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.714+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.714+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.714+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.715+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.715+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.716+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.716+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:23.717+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.717+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.718+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.718+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.719+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.719+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:23.720+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.720+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:23.720+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.721+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:23.722+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:23.722+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:23.722+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.723+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.723+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:23.723+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-05-29T21:30:23.725+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:27.346+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:27.347+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:27.350+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:27.350+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:27.350+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:27.351+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:27.352+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:27.352+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.352+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:27.352+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:27.353+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:27.353+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:27.354+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.354+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.354+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.354+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.355+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.356+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.356+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.357+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.357+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.358+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.358+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.359+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.359+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.359+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.359+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.360+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.360+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:27.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:27.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:27.363+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:27.364+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:27.364+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:27.365+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:27.366+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:27.366+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:27.366+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:27.366+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:27.367+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.367+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:27.367+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:27.367+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:27.367+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:27.368+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.368+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.368+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.368+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.369+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:27.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.373+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.373+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.373+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.373+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.374+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:27.374+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.375+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:27.375+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.375+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:27.376+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:27.376+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:27.376+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:27.377+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:28.479+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-05-29T21:30:28.479+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-05-29T21:30:28.481+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-05-29T21:30:28.481+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-05-29T21:30:28.484+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-05-29T21:30:28.484+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-05-29T21:30:28.485+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:28.485+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.487+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.487+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.487+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.487+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.488+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.488+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.488+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.489+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.489+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.490+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.490+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.490+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-05-29T21:30:28.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:28.496+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-05-29T21:30:28.496+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-05-29T21:30:28.497+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-05-29T21:30:28.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-05-29T21:30:28.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-05-29T21:30:28.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-05-29T21:30:28.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:28.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.502+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.502+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.502+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.503+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.503+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.503+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.505+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.505+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.508+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.509+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.510+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.510+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.510+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-05-29T21:30:28.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:28.754+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:28.755+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:28.757+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:28.757+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:28.757+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:28.758+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:28.758+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:28.758+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.759+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.759+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.759+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.759+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.759+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.760+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.760+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.760+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.761+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.761+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.761+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.762+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.762+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.763+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.763+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.764+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.764+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.765+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.765+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.765+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.766+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.766+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.767+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.767+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.767+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.768+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.768+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.768+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.768+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:28.769+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:28.770+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:28.770+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:28.772+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:28.772+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:28.772+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:28.772+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:28.772+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:28.773+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.773+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.773+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:28.773+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.773+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.774+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.774+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.774+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.774+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.775+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.775+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.777+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.777+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.777+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.777+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.778+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.778+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:28.779+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.779+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.779+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.779+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.781+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.781+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:28.781+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.781+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:28.782+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.782+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:28.782+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.782+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:28.782+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:28.783+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:29.535+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-05-29T21:30:29.535+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-05-29T21:30:29.537+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-05-29T21:30:29.538+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-05-29T21:30:29.539+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-05-29T21:30:29.540+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-05-29T21:30:29.541+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:29.541+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.541+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.542+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:29.542+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:29.542+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.545+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.545+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.546+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.546+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.547+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.547+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.547+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.548+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.548+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.550+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.550+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.550+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.550+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.550+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.551+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.551+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:29.552+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:29.552+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.552+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.552+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.552+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-05-29T21:30:29.553+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:29.555+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-05-29T21:30:29.555+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-05-29T21:30:29.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-05-29T21:30:29.558+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-05-29T21:30:29.559+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-05-29T21:30:29.560+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-05-29T21:30:29.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:29.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:29.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:29.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.563+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.563+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.563+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.564+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.564+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.565+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.566+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.566+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.566+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:29.567+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.567+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.568+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.568+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.569+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.569+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:29.570+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.570+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:29.570+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.571+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:29.572+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:29.572+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:29.572+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.572+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.572+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:29.572+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-05-29T21:30:29.573+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:31.132+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:31.134+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:31.135+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:31.136+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:31.136+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:31.136+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:31.137+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:31.137+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.138+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:31.138+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:31.138+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:31.139+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:31.139+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.139+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.139+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.140+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.140+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.140+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.141+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.141+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.141+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.141+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.142+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.142+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.142+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.142+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.142+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.142+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.143+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.143+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.144+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.144+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.144+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.145+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.145+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:31.146+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:31.146+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:31.146+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:31.147+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:31.147+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:31.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:31.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:31.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:31.150+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:31.150+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:31.150+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:31.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:31.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:31.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:31.152+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.152+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.152+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.152+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.153+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.153+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.153+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.154+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.154+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.154+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.155+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.155+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:31.155+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.155+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.155+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.156+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.156+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.156+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:31.157+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.157+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:31.157+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.158+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:31.158+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:31.159+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:31.159+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:31.159+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:34.539+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:34.539+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:34.540+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:34.541+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:34.542+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:34.542+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:34.542+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:34.542+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:34.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:34.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:34.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:34.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.545+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.545+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.545+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.546+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.546+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.547+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.547+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.547+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.548+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.548+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.549+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.549+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.549+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.549+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.550+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.550+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.550+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.550+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.551+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.551+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:34.551+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:34.552+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:34.552+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:34.553+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:34.553+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:34.554+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:34.555+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:34.555+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:34.555+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:34.556+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:34.556+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.556+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:34.556+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:34.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:34.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:34.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.557+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.558+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.558+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.559+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.559+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.559+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.560+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.560+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:34.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.561+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.562+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:34.563+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.563+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:34.563+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.563+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:34.565+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:34.565+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:34.565+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:34.566+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:35.867+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/reservation/today", parameters={}
2024-05-29T21:30:35.867+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:30:35.868+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.ReservationController#getTodaysReservations()
2024-05-29T21:30:35.868+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:30:35.869+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date=?
2024-05-29T21:30:35.869+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:30:35.870+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:35.870+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:35.870+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.870+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.870+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:35.870+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:35.870+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:35.870+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.871+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:35.871+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.871+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.871+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.871+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.871+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:35.872+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:35.872+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.872+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.872+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.872+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.872+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.873+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.873+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.874+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.874+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.874+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.874+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.875+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.875+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.875+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.875+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.875+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.875+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.876+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.876+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.876+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.876+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.877+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.877+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.877+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.877+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.877+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.878+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.878+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.878+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.878+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.878+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.879+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.879+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.879+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.884+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:35.884+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.884+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:35.885+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.885+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.885+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.885+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.885+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.885+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.886+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.886+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.886+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.887+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.887+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.887+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.887+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.887+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.887+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.887+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.888+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.888+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.888+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.889+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.889+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.889+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.889+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.890+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.890+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.890+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.890+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.890+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.891+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.891+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.891+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.891+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.891+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.892+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Reservation(id=3, date=2024-05-29, time=13:33, reservation_description=Business conference with key (truncated)...]
2024-05-29T21:30:35.892+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.892+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.892+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.893+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:35.894+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.894+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.895+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.895+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/reservation/today", parameters={}
2024-05-29T21:30:35.895+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.895+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.ReservationController#getTodaysReservations()
2024-05-29T21:30:35.895+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.896+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date=?
2024-05-29T21:30:35.896+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.896+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:35.897+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:35.897+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.897+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.897+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:35.897+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:35.897+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:35.897+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.898+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.898+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.898+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:35.898+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:35.898+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.898+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.898+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.898+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.899+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.899+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.899+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.899+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.899+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.899+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.900+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.900+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.901+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.901+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.901+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.901+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.901+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.901+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.906+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.906+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.906+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.908+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.908+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.908+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.908+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.908+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.908+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.909+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.909+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.909+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.909+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.909+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.909+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:30:35.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:35.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Reservation(id=3, date=2024-05-29, time=13:33, reservation_description=Business conference with key (truncated)...]
2024-05-29T21:30:35.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:30:35.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:30:35.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:35.912+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:30:35.913+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:35.913+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.914+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.915+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.915+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.915+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.916+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.916+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.917+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.917+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.918+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.918+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.918+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.919+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.919+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.919+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.920+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.920+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.921+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.921+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.921+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.922+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:35.922+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:35.922+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.922+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.922+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.922+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.923+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.923+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.923+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.924+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.924+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.925+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.925+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:35.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.928+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:35.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.930+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.931+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.931+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.931+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:35.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.937+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.937+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.944+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.944+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.944+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.945+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.945+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.945+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:35.945+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.945+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:35.946+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:30:35.946+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:36.798+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:36.799+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:36.800+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:36.801+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:36.801+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:36.801+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:36.802+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:36.802+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.803+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:36.803+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:36.803+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:36.803+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:36.803+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.804+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.804+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.804+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.805+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.806+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.806+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.807+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.807+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.808+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.808+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.809+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.809+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.810+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.810+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.810+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.811+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.811+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.812+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.812+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.812+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.813+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.813+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:36.813+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:36.813+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:36.815+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:36.816+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:36.816+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:36.817+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:36.817+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:36.818+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:36.818+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:36.818+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:36.819+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.819+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:36.819+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:36.821+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:36.822+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:36.822+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.822+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.822+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.822+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.822+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.823+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.824+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.824+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.825+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.825+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.825+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.826+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:36.826+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.827+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.827+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.827+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.828+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.828+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:36.828+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.828+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:36.829+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.829+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:36.829+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:36.829+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:36.829+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:36.830+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:37.485+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-05-29T21:30:37.485+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-05-29T21:30:37.487+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-05-29T21:30:37.489+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-05-29T21:30:37.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-05-29T21:30:37.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-05-29T21:30:37.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:37.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:37.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:37.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.496+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.496+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.497+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.497+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.497+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:37.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:37.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-05-29T21:30:37.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:37.502+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-05-29T21:30:37.502+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-05-29T21:30:37.504+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-05-29T21:30:37.504+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-05-29T21:30:37.505+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-05-29T21:30:37.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-05-29T21:30:37.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:37.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:37.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:37.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.509+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.509+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.509+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.509+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.509+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.510+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.510+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.510+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:37.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:37.513+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.513+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:37.513+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.515+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:37.515+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:37.515+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:37.515+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.516+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.516+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:37.516+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-05-29T21:30:37.517+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:41.145+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:41.145+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:41.146+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:41.147+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:41.147+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:41.147+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:41.148+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:41.148+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:41.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:41.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:41.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:41.150+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.150+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.152+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.152+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.153+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.153+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.153+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.153+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.154+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.154+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.154+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.155+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.155+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.155+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.155+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.156+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.156+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.156+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.157+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.157+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.158+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:41.158+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:41.158+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:41.159+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:41.160+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:41.160+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:41.161+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:41.161+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:41.161+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:41.162+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:41.162+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:41.162+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.162+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:41.162+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:41.163+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:41.163+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:41.163+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.163+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.163+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.163+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.164+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.164+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.165+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.165+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.166+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.166+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.166+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.167+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:41.167+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.167+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.167+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.167+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.168+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.168+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:41.169+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.169+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:41.169+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.170+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:41.170+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:41.171+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:41.171+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:41.171+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:42.467+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:30:42.467+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/reservation/today", parameters={}
2024-05-29T21:30:42.468+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:30:42.468+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.ReservationController#getTodaysReservations()
2024-05-29T21:30:42.470+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:30:42.470+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date=?
2024-05-29T21:30:42.471+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:42.471+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.471+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.471+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:42.472+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:42.472+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.472+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:42.472+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:42.473+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.473+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.473+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:42.473+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.473+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.473+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:42.474+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:42.474+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.474+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.474+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.474+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.474+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.474+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.475+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.475+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.475+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.475+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.476+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.476+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.476+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.476+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.477+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.477+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.477+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.477+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.478+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.478+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.478+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.478+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.479+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.479+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.479+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.479+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.479+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.480+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.480+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.480+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.480+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.480+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.481+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.481+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.481+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.481+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:42.481+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.481+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:42.482+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.482+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.482+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.482+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.482+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.483+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.483+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.483+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.483+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.483+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.483+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.483+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.484+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.484+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.484+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.484+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.485+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.485+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.485+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.486+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.488+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Reservation(id=3, date=2024-05-29, time=13:33, reservation_description=Business conference with key (truncated)...]
2024-05-29T21:30:42.488+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.488+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.488+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:42.489+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.489+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.489+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/reservation/today", parameters={}
2024-05-29T21:30:42.489+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.489+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.ReservationController#getTodaysReservations()
2024-05-29T21:30:42.490+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.490+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date=?
2024-05-29T21:30:42.490+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:42.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:42.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.491+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.492+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.493+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.494+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.495+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.496+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.496+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.496+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.496+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.496+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.497+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.497+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.497+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.497+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.498+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.499+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.500+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.501+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.502+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.502+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.502+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.502+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.503+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.503+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.503+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.503+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.503+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.505+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.505+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.505+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.505+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Reservation(id=3, date=2024-05-29, time=13:33, reservation_description=Business conference with key (truncated)...]
2024-05-29T21:30:42.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.506+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:42.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.507+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.508+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.508+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:30:42.509+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:42.509+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:30:42.509+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:30:42.510+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:30:42.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:42.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.511+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.512+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.513+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.514+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.514+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.514+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.515+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.515+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.516+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.516+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.516+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.517+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.517+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.517+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.518+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.519+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.519+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.520+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:42.520+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:42.520+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.520+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.520+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.521+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.521+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.521+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.522+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.523+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.523+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.523+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.524+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.524+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.524+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:42.525+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.525+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.525+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.526+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.527+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.527+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:42.528+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.528+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.528+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.529+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.529+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.529+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:42.529+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.529+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.530+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.531+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.531+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.532+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.532+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.532+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.533+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.533+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.533+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.534+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.534+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.535+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.535+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.535+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.535+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.536+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.536+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.536+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.537+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.537+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.538+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.540+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.540+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.541+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.541+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.541+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.541+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.543+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:42.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:42.544+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:30:42.545+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:45.671+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:45.671+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:45.673+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:45.673+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:45.674+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:45.674+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:45.675+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:45.675+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.675+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:45.675+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:45.675+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:45.675+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:45.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.677+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.677+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.678+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.678+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.679+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.679+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.679+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.680+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.681+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.681+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.681+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:45.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:45.683+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:45.684+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:45.685+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-05-29T21:30:45.685+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-05-29T21:30:45.686+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-05-29T21:30:45.687+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:45.687+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:45.687+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:45.688+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:45.688+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.688+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:45.688+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:45.688+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:45.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:45.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.689+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.690+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.690+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.691+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.691+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.691+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.692+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.692+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:45.692+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.692+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.693+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:45.694+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.694+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:45.694+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.695+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:45.695+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:45.695+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:45.695+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-05-29T21:30:45.696+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:46.358+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:30:46.358+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:30:46.358+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/reservation/today", parameters={}
2024-05-29T21:30:46.358+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.ReservationController#getTodaysReservations()
2024-05-29T21:30:46.360+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:30:46.360+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date=?
2024-05-29T21:30:46.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:46.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:46.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:46.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:46.361+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:46.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:46.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:46.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:46.362+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.363+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.363+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.363+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.363+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.363+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.363+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.363+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.364+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.364+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.364+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.364+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.364+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.364+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.365+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.365+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.365+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.365+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.366+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.366+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.366+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.366+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.367+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.367+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.367+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.367+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.368+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.368+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.368+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.368+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.368+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.369+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.369+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.369+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.369+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.369+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:46.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:46.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.370+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.371+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.371+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.371+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.371+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.371+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.371+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.371+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.372+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.373+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.373+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.373+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.373+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.373+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.375+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.375+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.375+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.375+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.376+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.376+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.376+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.376+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Reservation(id=3, date=2024-05-29, time=13:33, reservation_description=Business conference with key (truncated)...]
2024-05-29T21:30:46.376+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.377+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:46.377+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.377+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/reservation/today", parameters={}
2024-05-29T21:30:46.377+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.377+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.ReservationController#getTodaysReservations()
2024-05-29T21:30:46.378+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.378+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.378+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date=?
2024-05-29T21:30:46.379+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.379+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:46.379+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:46.379+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.379+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.379+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:46.379+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.380+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:46.380+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.380+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:46.380+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.380+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.380+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.380+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:46.380+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:46.381+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.381+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.381+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.381+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.381+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.381+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.381+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.381+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.382+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.382+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.382+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.382+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.382+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.382+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.382+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.383+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.383+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.383+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.383+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.383+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.384+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.384+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.384+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.384+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.384+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.384+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.385+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.385+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.385+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.385+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.385+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.385+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.386+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.386+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.386+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.386+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.386+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.387+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.387+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.387+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.387+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.387+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.387+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.388+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.388+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.388+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.388+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.388+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.388+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.388+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.389+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.389+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.389+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.389+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.390+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.390+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.390+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.390+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.390+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.391+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.391+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.391+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.391+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Reservation(id=3, date=2024-05-29, time=13:33, reservation_description=Business conference with key (truncated)...]
2024-05-29T21:30:46.392+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.392+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.392+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.392+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.392+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.392+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:46.393+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.393+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:30:46.393+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:46.394+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:30:46.394+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:30:46.395+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:30:46.396+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:46.396+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.396+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.397+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.397+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.398+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.398+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.399+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.399+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.399+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.399+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.400+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.400+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.400+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.400+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.401+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.401+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.402+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.402+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.403+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.403+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.403+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:46.403+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:46.405+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.405+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.405+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.405+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.406+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.406+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.406+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.407+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.407+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.408+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.408+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.408+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.409+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:46.409+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.410+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.410+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.410+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.411+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.411+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:46.411+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.411+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.412+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.412+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.412+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.412+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:46.412+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.412+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.413+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.413+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.413+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.413+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.414+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.414+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.415+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.415+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.415+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.416+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.416+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.416+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.417+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.417+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.417+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.418+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.418+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.418+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.418+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.419+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.419+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.419+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.420+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.420+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.420+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.421+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.421+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.421+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.422+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.422+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.422+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.422+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.423+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:46.423+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.424+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:46.424+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:30:46.425+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:47.900+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/reservation/today", parameters={}
2024-05-29T21:30:47.900+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:30:47.901+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.ReservationController#getTodaysReservations()
2024-05-29T21:30:47.901+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:30:47.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date=?
2024-05-29T21:30:47.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:30:47.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:47.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:47.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:47.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:47.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:47.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:47.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:47.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:47.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.908+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.908+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.909+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.909+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.911+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.912+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.912+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.912+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.912+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.912+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.912+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.912+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.913+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.913+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.913+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.913+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.913+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.914+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.914+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:47.914+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:47.914+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.915+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.915+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.915+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.915+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.915+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.916+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.916+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.916+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.916+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.916+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.917+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.917+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.917+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.917+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.918+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.918+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.918+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.919+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.919+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.919+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.925+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.925+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Reservation(id=3, date=2024-05-29, time=13:33, reservation_description=Business conference with key (truncated)...]
2024-05-29T21:30:47.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.928+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.928+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:47.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/reservation/today", parameters={}
2024-05-29T21:30:47.930+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.ReservationController#getTodaysReservations()
2024-05-29T21:30:47.930+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.930+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.931+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.931+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.931+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date=?
2024-05-29T21:30:47.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:47.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:47.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:47.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-05-29T21:30:47.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:47.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:47.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:47.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.937+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.937+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.937+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.937+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.937+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.942+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.944+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:30:47.944+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.944+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.945+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.945+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:47.946+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.946+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:30:47.946+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:30:47.946+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Reservation(id=3, date=2024-05-29, time=13:33, reservation_description=Business conference with key (truncated)...]
2024-05-29T21:30:47.946+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:30:47.947+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:30:47.947+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:30:47.947+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.948+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.948+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.949+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.949+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.950+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.950+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.950+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.951+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.951+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.952+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.952+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.952+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.952+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.953+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.953+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.953+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.954+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.954+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.954+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.955+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:47.955+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:30:47.955+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.955+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.955+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.955+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.956+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.956+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.956+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.957+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.957+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.958+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.958+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.958+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.959+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:30:47.959+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.959+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.960+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.960+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.960+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.961+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:30:47.961+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.961+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.962+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.962+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.962+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.963+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:30:47.963+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.963+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.964+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.964+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.964+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.965+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.965+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.966+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.966+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.967+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.967+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.968+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.968+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.968+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.969+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.969+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.969+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.970+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.970+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.970+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.970+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.971+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.971+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.972+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.972+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.972+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.974+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.974+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.974+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.974+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.974+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.974+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.975+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.975+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.975+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:30:47.975+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.975+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:30:47.976+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:30:47.976+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:31:48.089+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:31:48.090+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:31:48.091+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:31:48.092+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:31:48.092+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.092+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.092+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.092+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.093+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.093+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.093+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.094+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.094+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.095+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.095+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.095+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.096+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.096+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.096+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.097+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.097+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.097+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.098+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.098+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.098+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:31:48.099+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:31:48.099+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:31:48.099+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:31:48.099+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.099+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.099+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.100+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.100+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.101+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.101+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.101+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.102+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.102+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.102+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.103+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.103+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.103+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.103+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.104+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.104+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.105+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.105+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.105+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.106+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.106+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:31:48.106+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:31:48.106+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.106+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.107+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.107+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.107+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.109+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.109+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.109+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.110+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.110+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.110+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.111+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.111+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.111+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.112+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.112+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.112+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.113+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.113+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.113+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.113+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.115+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.115+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.115+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.116+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.116+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.116+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.117+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.117+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.117+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.118+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.118+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.118+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.118+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.118+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.118+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.119+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.119+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:31:48.120+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:31:48.121+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:31:48.121+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:31:48.122+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:31:48.122+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:31:48.122+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.123+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.123+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.124+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.124+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.125+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.125+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.125+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.126+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.126+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.126+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.127+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.127+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.127+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.128+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.128+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.128+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.129+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.129+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.129+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.131+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:31:48.131+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:31:48.131+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:31:48.132+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:31:48.132+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.132+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.132+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.132+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.132+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.133+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.133+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.134+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.134+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.134+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.135+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:31:48.135+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.135+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.135+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.137+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.138+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.138+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:31:48.139+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.139+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.139+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.139+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.140+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:31:48.140+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:31:48.140+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.140+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.141+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.141+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.141+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.142+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.142+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.142+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.143+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.143+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.143+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.144+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.144+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.144+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.145+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.145+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.145+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.146+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.146+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.146+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.147+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.147+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.147+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.147+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.148+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.148+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.148+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.149+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.150+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.150+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:31:48.151+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.152+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:31:48.152+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:31:48.153+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:53:18.860+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T21:53:18.865+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T21:53:18.886+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T21:53:18.895+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T21:53:18.896+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.898+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.901+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.902+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.903+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.904+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.905+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.906+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.906+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.906+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.907+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.908+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.909+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.910+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:53:18.920+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:53:18.920+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T21:53:18.920+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:53:18.921+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:53:18.921+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:53:18.921+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:53:18.922+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.922+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.923+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.923+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:53:18.924+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:53:18.924+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:53:18.925+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:53:18.925+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:53:18.925+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T21:53:18.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:53:18.926+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.927+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.928+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.928+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T21:53:18.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.929+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.930+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.930+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:53:18.931+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T21:53:18.931+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.931+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.932+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.933+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.934+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.935+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.936+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.938+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.939+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.940+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.941+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.943+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.944+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T21:53:18.944+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.944+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T21:53:18.945+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T21:53:18.949+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T21:53:19.599+02:00  INFO 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-29T21:53:19.601+02:00 DEBUG 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\TableController.class (DELETE)]]
2024-05-29T21:53:19.614+02:00 DEBUG 67488 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-05-29T21:53:19.619+02:00 DEBUG 67488 --- [back-end] [Thread-5] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-05-29T21:53:19.620+02:00 DEBUG 67488 --- [back-end] [Thread-5] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-05-29T21:53:19.625+02:00 DEBUG 67488 --- [back-end] [Thread-5] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7177ec8f, started on Wed May 29 21:17:30 CEST 2024
2024-05-29T21:53:19.738+02:00  INFO 67488 --- [back-end] [Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T21:53:19.825+02:00  INFO 67488 --- [back-end] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-05-29T21:53:19.848+02:00  INFO 67488 --- [back-end] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-05-29T21:53:20.061+02:00 DEBUG 67488 --- [back-end] [Thread-5] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-05-29T21:53:20.140+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 67488 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-05-29T21:53:20.141+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-05-29T21:53:20.141+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-05-29T21:53:20.141+02:00 DEBUG 67488 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7706625b
2024-05-29T21:53:20.363+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-29T21:53:20.364+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-05-29T21:53:20.383+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19 ms. Found 7 JPA repository interfaces.
2024-05-29T21:53:20.441+02:00  WARN 67488 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-29T21:53:20.442+02:00  INFO 67488 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-05-29T21:53:20.474+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T21:53:20.474+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T21:53:20.474+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-05-29T21:53:20.485+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-05-29T21:53:20.487+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-29T21:53:20.487+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-29T21:53:20.501+02:00  INFO 67488 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-29T21:53:20.501+02:00 DEBUG 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-05-29T21:53:20.502+02:00  INFO 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 361 ms
2024-05-29T21:53:20.508+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-05-29T21:53:20.508+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-05-29T21:53:20.509+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-05-29T21:53:20.509+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-05-29T21:53:20.509+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-05-29T21:53:20.529+02:00  INFO 67488 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-29T21:53:20.531+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-29T21:53:20.535+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-29T21:53:20.535+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-05-29T21:53:20.571+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@4aa899e8
2024-05-29T21:53:20.572+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-05-29T21:53:20.580+02:00  WARN 67488 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-29T21:53:20.706+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-29T21:53:20.797+02:00  INFO 67488 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T21:53:20.908+02:00  WARN 67488 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-29T21:53:20.927+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 39 mappings in 'requestMappingHandlerMapping'
2024-05-29T21:53:20.950+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-05-29T21:53:20.956+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-05-29T21:53:20.960+02:00 DEBUG 67488 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-05-29T21:53:20.967+02:00 DEBUG 67488 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-05-29T21:53:20.990+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-05-29T21:53:20.998+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-05-29T21:53:21.001+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-05-29T21:53:21.003+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.909 seconds (process running for 2151.14)
2024-05-29T21:53:21.011+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-05-29T21:53:21.012+02:00  INFO 67488 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-05-29T21:53:21.012+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-05-29T21:53:22.420+02:00  INFO 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-29T21:53:22.420+02:00 DEBUG 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\TableController.class (ADD)]]
2024-05-29T21:53:22.420+02:00 DEBUG 67488 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-05-29T21:53:22.420+02:00 DEBUG 67488 --- [back-end] [Thread-7] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-05-29T21:53:22.421+02:00 DEBUG 67488 --- [back-end] [Thread-7] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-05-29T21:53:22.421+02:00 DEBUG 67488 --- [back-end] [Thread-7] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7706625b, started on Wed May 29 21:53:20 CEST 2024
2024-05-29T21:53:22.424+02:00  INFO 67488 --- [back-end] [Thread-7] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T21:53:22.424+02:00  INFO 67488 --- [back-end] [Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2024-05-29T21:53:22.426+02:00  INFO 67488 --- [back-end] [Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2024-05-29T21:53:22.471+02:00 DEBUG 67488 --- [back-end] [Thread-7] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-05-29T21:53:22.488+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 67488 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-05-29T21:53:22.488+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-05-29T21:53:22.488+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-05-29T21:53:22.489+02:00 DEBUG 67488 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41d81cbe
2024-05-29T21:53:22.567+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-29T21:53:22.567+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-05-29T21:53:22.576+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 7 JPA repository interfaces.
2024-05-29T21:53:22.609+02:00  WARN 67488 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-29T21:53:22.609+02:00  INFO 67488 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-05-29T21:53:22.629+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T21:53:22.629+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T21:53:22.629+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-05-29T21:53:22.633+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-05-29T21:53:22.634+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-29T21:53:22.634+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-29T21:53:22.646+02:00  INFO 67488 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-29T21:53:22.646+02:00 DEBUG 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-05-29T21:53:22.646+02:00  INFO 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 157 ms
2024-05-29T21:53:22.651+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-05-29T21:53:22.651+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-05-29T21:53:22.651+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-05-29T21:53:22.652+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-05-29T21:53:22.652+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-05-29T21:53:22.667+02:00  INFO 67488 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-29T21:53:22.668+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-29T21:53:22.671+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-29T21:53:22.671+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2024-05-29T21:53:22.709+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@68378221
2024-05-29T21:53:22.709+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2024-05-29T21:53:22.714+02:00  WARN 67488 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-29T21:53:22.796+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-29T21:53:22.856+02:00  INFO 67488 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T21:53:22.939+02:00  WARN 67488 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-29T21:53:22.954+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 39 mappings in 'requestMappingHandlerMapping'
2024-05-29T21:53:22.969+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-05-29T21:53:22.974+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-05-29T21:53:22.975+02:00 DEBUG 67488 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-05-29T21:53:22.979+02:00 DEBUG 67488 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-05-29T21:53:22.993+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-05-29T21:53:23.001+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-05-29T21:53:23.003+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-05-29T21:53:23.007+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.533 seconds (process running for 2153.142)
2024-05-29T21:53:23.007+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-05-29T21:53:23.007+02:00  INFO 67488 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-05-29T21:53:23.008+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-05-29T22:28:14.400+02:00  INFO 67488 --- [back-end] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-29T22:28:14.410+02:00  INFO 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-05-29T22:28:14.415+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2024-05-29T22:28:14.416+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2024-05-29T22:28:14.416+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2024-05-29T22:28:14.450+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@66a33
2024-05-29T22:28:14.450+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@17c2b675
2024-05-29T22:28:14.451+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-05-29T22:28:14.452+02:00  INFO 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 42 ms
2024-05-29T22:28:14.458+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/tables", parameters={}
2024-05-29T22:28:14.463+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.TableController#getAllTables()
2024-05-29T22:28:14.592+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-05-29T22:28:14.623+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-05-29T22:28:14.625+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.630+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.659+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.674+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.676+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.725+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.727+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.728+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.730+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.731+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.731+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.732+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.733+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.734+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.735+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.735+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.735+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.739+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.740+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.743+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T22:28:14.748+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T22:28:14.749+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-05-29T22:28:14.749+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T22:28:14.749+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T22:28:14.750+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T22:28:14.751+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T22:28:14.752+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.752+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.753+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.754+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T22:28:14.755+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T22:28:14.755+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T22:28:14.756+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T22:28:14.757+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T22:28:14.758+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-05-29T22:28:14.759+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T22:28:14.760+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.760+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.761+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.762+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.762+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-05-29T22:28:14.763+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.764+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.764+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.765+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.765+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T22:28:14.766+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-05-29T22:28:14.766+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.766+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.768+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.769+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.769+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.770+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.770+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.770+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.771+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.772+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.772+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.773+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.774+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.774+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.775+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.776+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.776+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.777+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.777+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.778+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.779+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.780+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.780+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.781+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.782+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.782+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.783+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.785+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.785+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.786+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.787+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.787+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.788+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.788+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.788+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-05-29T22:28:14.789+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.789+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-05-29T22:28:14.790+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Table(id=18, name=Table 18, seats_amount=4, status=Empty_Now, orders=[], reservations=[]), Table(id (truncated)...]
2024-05-29T22:28:14.807+02:00 DEBUG 67488 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-05-29T23:13:50.217+02:00  INFO 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-29T23:13:50.217+02:00 DEBUG 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\TableController.class (DELETE)]]
2024-05-29T23:13:50.217+02:00 DEBUG 67488 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-05-29T23:13:50.218+02:00 DEBUG 67488 --- [back-end] [Thread-11] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-05-29T23:13:50.218+02:00 DEBUG 67488 --- [back-end] [Thread-11] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-05-29T23:13:50.219+02:00 DEBUG 67488 --- [back-end] [Thread-11] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41d81cbe, started on Wed May 29 21:53:22 CEST 2024
2024-05-29T23:13:50.227+02:00  INFO 67488 --- [back-end] [Thread-11] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:13:50.229+02:00  INFO 67488 --- [back-end] [Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2024-05-29T23:13:50.233+02:00  INFO 67488 --- [back-end] [Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2024-05-29T23:13:50.290+02:00 DEBUG 67488 --- [back-end] [Thread-11] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-05-29T23:13:50.329+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 67488 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-05-29T23:13:50.329+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-05-29T23:13:50.329+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-05-29T23:13:50.330+02:00 DEBUG 67488 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22908a1b
2024-05-29T23:13:50.458+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-29T23:13:50.458+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-05-29T23:13:50.469+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 7 JPA repository interfaces.
2024-05-29T23:13:50.521+02:00  WARN 67488 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-29T23:13:50.522+02:00  INFO 67488 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-05-29T23:13:50.546+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:13:50.548+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:13:50.548+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-05-29T23:13:50.567+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-05-29T23:13:50.569+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-29T23:13:50.569+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-29T23:13:50.597+02:00  INFO 67488 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-29T23:13:50.597+02:00 DEBUG 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-05-29T23:13:50.597+02:00  INFO 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 267 ms
2024-05-29T23:13:50.608+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-05-29T23:13:50.609+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-05-29T23:13:50.611+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-05-29T23:13:50.611+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-05-29T23:13:50.611+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-05-29T23:13:50.643+02:00  INFO 67488 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-29T23:13:50.645+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-29T23:13:50.650+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-29T23:13:50.651+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2024-05-29T23:13:50.704+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@52c0b7bb
2024-05-29T23:13:50.704+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2024-05-29T23:13:50.721+02:00  WARN 67488 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-29T23:13:50.865+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-29T23:13:50.938+02:00  INFO 67488 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:13:51.007+02:00  WARN 67488 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-29T23:13:51.021+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 33 mappings in 'requestMappingHandlerMapping'
2024-05-29T23:13:51.051+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-05-29T23:13:51.056+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-05-29T23:13:51.059+02:00 DEBUG 67488 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-05-29T23:13:51.071+02:00 DEBUG 67488 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-05-29T23:13:51.091+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-05-29T23:13:51.101+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-05-29T23:13:51.103+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-05-29T23:13:51.105+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.806 seconds (process running for 6981.241)
2024-05-29T23:13:51.105+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-05-29T23:13:51.105+02:00  INFO 67488 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-05-29T23:13:51.106+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-05-29T23:13:54.542+02:00  INFO 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-29T23:13:54.542+02:00 DEBUG 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\TableController.class (ADD)]]
2024-05-29T23:13:54.542+02:00 DEBUG 67488 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-05-29T23:13:54.544+02:00 DEBUG 67488 --- [back-end] [Thread-15] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-05-29T23:13:54.544+02:00 DEBUG 67488 --- [back-end] [Thread-15] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-05-29T23:13:54.546+02:00 DEBUG 67488 --- [back-end] [Thread-15] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22908a1b, started on Wed May 29 23:13:50 CEST 2024
2024-05-29T23:13:54.554+02:00  INFO 67488 --- [back-end] [Thread-15] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:13:54.555+02:00  INFO 67488 --- [back-end] [Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2024-05-29T23:13:54.557+02:00  INFO 67488 --- [back-end] [Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.
2024-05-29T23:13:54.621+02:00 DEBUG 67488 --- [back-end] [Thread-15] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-05-29T23:13:54.637+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 67488 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-05-29T23:13:54.638+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-05-29T23:13:54.638+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-05-29T23:13:54.638+02:00 DEBUG 67488 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@155cc5b
2024-05-29T23:13:54.768+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-29T23:13:54.768+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-05-29T23:13:54.792+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23 ms. Found 7 JPA repository interfaces.
2024-05-29T23:13:54.888+02:00  WARN 67488 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-29T23:13:54.890+02:00  INFO 67488 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-05-29T23:13:54.928+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:13:54.929+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:13:54.929+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-05-29T23:13:54.933+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-05-29T23:13:54.934+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-29T23:13:54.934+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-29T23:13:54.947+02:00  INFO 67488 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-29T23:13:54.947+02:00 DEBUG 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-05-29T23:13:54.947+02:00  INFO 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 309 ms
2024-05-29T23:13:54.958+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-05-29T23:13:54.958+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-05-29T23:13:54.959+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-05-29T23:13:54.959+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-05-29T23:13:54.959+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-05-29T23:13:54.976+02:00  INFO 67488 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-29T23:13:54.978+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-29T23:13:54.981+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-29T23:13:54.982+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Starting...
2024-05-29T23:13:55.018+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-5 - Added connection org.postgresql.jdbc.PgConnection@6d7ca81c
2024-05-29T23:13:55.018+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Start completed.
2024-05-29T23:13:55.023+02:00  WARN 67488 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-29T23:13:55.092+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-29T23:13:55.148+02:00  INFO 67488 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:13:55.243+02:00  WARN 67488 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-29T23:13:55.255+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 39 mappings in 'requestMappingHandlerMapping'
2024-05-29T23:13:55.273+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-05-29T23:13:55.282+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-05-29T23:13:55.284+02:00 DEBUG 67488 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-05-29T23:13:55.287+02:00 DEBUG 67488 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-05-29T23:13:55.300+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-05-29T23:13:55.307+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-05-29T23:13:55.309+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-05-29T23:13:55.311+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.686 seconds (process running for 6985.447)
2024-05-29T23:13:55.311+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-05-29T23:13:55.311+02:00  INFO 67488 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-05-29T23:13:55.311+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-05-29T23:14:08.959+02:00  INFO 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-29T23:14:08.959+02:00 DEBUG 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\TableController.class (DELETE)]]
2024-05-29T23:14:08.959+02:00 DEBUG 67488 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-05-29T23:14:08.960+02:00 DEBUG 67488 --- [back-end] [Thread-19] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-05-29T23:14:08.960+02:00 DEBUG 67488 --- [back-end] [Thread-19] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-05-29T23:14:08.960+02:00 DEBUG 67488 --- [back-end] [Thread-19] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@155cc5b, started on Wed May 29 23:13:54 CEST 2024
2024-05-29T23:14:08.965+02:00  INFO 67488 --- [back-end] [Thread-19] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:14:08.966+02:00  INFO 67488 --- [back-end] [Thread-19] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown initiated...
2024-05-29T23:14:08.968+02:00  INFO 67488 --- [back-end] [Thread-19] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown completed.
2024-05-29T23:14:09.058+02:00 DEBUG 67488 --- [back-end] [Thread-19] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-05-29T23:14:09.108+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 67488 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-05-29T23:14:09.108+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-05-29T23:14:09.108+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-05-29T23:14:09.110+02:00 DEBUG 67488 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78101658
2024-05-29T23:14:09.312+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-29T23:14:09.315+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-05-29T23:14:09.333+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19 ms. Found 7 JPA repository interfaces.
2024-05-29T23:14:09.394+02:00  WARN 67488 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-29T23:14:09.397+02:00  INFO 67488 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-05-29T23:14:09.437+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:14:09.437+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:14:09.438+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-05-29T23:14:09.448+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-05-29T23:14:09.449+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-29T23:14:09.449+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-29T23:14:09.466+02:00  INFO 67488 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-29T23:14:09.467+02:00 DEBUG 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-05-29T23:14:09.467+02:00  INFO 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 357 ms
2024-05-29T23:14:09.481+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-05-29T23:14:09.481+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-05-29T23:14:09.483+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-05-29T23:14:09.483+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-05-29T23:14:09.483+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-05-29T23:14:09.513+02:00  INFO 67488 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-29T23:14:09.516+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-29T23:14:09.521+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-29T23:14:09.522+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Starting...
2024-05-29T23:14:09.710+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-6 - Added connection org.postgresql.jdbc.PgConnection@3d508acd
2024-05-29T23:14:09.710+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Start completed.
2024-05-29T23:14:09.723+02:00  WARN 67488 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-29T23:14:09.887+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-29T23:14:10.012+02:00  INFO 67488 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:14:10.181+02:00  WARN 67488 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-29T23:14:10.214+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 33 mappings in 'requestMappingHandlerMapping'
2024-05-29T23:14:10.266+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-05-29T23:14:10.283+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-05-29T23:14:10.289+02:00 DEBUG 67488 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-05-29T23:14:10.298+02:00 DEBUG 67488 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-05-29T23:14:10.351+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-05-29T23:14:10.365+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-05-29T23:14:10.369+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-05-29T23:14:10.372+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 1.304 seconds (process running for 7000.508)
2024-05-29T23:14:10.372+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-05-29T23:14:10.375+02:00  INFO 67488 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-05-29T23:14:10.377+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-05-29T23:14:11.793+02:00  INFO 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-29T23:14:11.793+02:00 DEBUG 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\TableController.class (ADD)]]
2024-05-29T23:14:11.793+02:00 DEBUG 67488 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-05-29T23:14:11.794+02:00 DEBUG 67488 --- [back-end] [Thread-23] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-05-29T23:14:11.796+02:00 DEBUG 67488 --- [back-end] [Thread-23] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-05-29T23:14:11.796+02:00 DEBUG 67488 --- [back-end] [Thread-23] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78101658, started on Wed May 29 23:14:09 CEST 2024
2024-05-29T23:14:11.805+02:00  INFO 67488 --- [back-end] [Thread-23] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:14:11.807+02:00  INFO 67488 --- [back-end] [Thread-23] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown initiated...
2024-05-29T23:14:11.810+02:00  INFO 67488 --- [back-end] [Thread-23] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown completed.
2024-05-29T23:14:11.891+02:00 DEBUG 67488 --- [back-end] [Thread-23] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-05-29T23:14:11.924+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 67488 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-05-29T23:14:11.924+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-05-29T23:14:11.924+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-05-29T23:14:11.927+02:00 DEBUG 67488 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d95b8ef
2024-05-29T23:14:12.071+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-29T23:14:12.072+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-05-29T23:14:12.091+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 7 JPA repository interfaces.
2024-05-29T23:14:12.170+02:00  WARN 67488 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-29T23:14:12.172+02:00  INFO 67488 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-05-29T23:14:12.212+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:14:12.212+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:14:12.212+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-05-29T23:14:12.223+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-05-29T23:14:12.225+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-29T23:14:12.225+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-29T23:14:12.243+02:00  INFO 67488 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-29T23:14:12.244+02:00 DEBUG 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-05-29T23:14:12.244+02:00  INFO 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 317 ms
2024-05-29T23:14:12.252+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-05-29T23:14:12.252+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-05-29T23:14:12.253+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-05-29T23:14:12.253+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-05-29T23:14:12.253+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-05-29T23:14:12.293+02:00  INFO 67488 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-29T23:14:12.296+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-29T23:14:12.302+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-29T23:14:12.305+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Starting...
2024-05-29T23:14:12.374+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-7 - Added connection org.postgresql.jdbc.PgConnection@2bfada3d
2024-05-29T23:14:12.376+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Start completed.
2024-05-29T23:14:12.385+02:00  WARN 67488 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-29T23:14:12.603+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-29T23:14:12.718+02:00  INFO 67488 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:14:12.930+02:00  WARN 67488 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-29T23:14:12.967+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 39 mappings in 'requestMappingHandlerMapping'
2024-05-29T23:14:13.020+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-05-29T23:14:13.034+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-05-29T23:14:13.041+02:00 DEBUG 67488 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-05-29T23:14:13.052+02:00 DEBUG 67488 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-05-29T23:14:13.094+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-05-29T23:14:13.114+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-05-29T23:14:13.117+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-05-29T23:14:13.121+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 1.226 seconds (process running for 7003.257)
2024-05-29T23:14:13.122+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-05-29T23:14:13.123+02:00  INFO 67488 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-05-29T23:14:13.124+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-05-29T23:20:45.633+02:00  INFO 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-29T23:20:45.633+02:00 DEBUG 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\TableController.class (DELETE)]]
2024-05-29T23:20:45.633+02:00 DEBUG 67488 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-05-29T23:20:45.633+02:00 DEBUG 67488 --- [back-end] [Thread-27] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-05-29T23:20:45.633+02:00 DEBUG 67488 --- [back-end] [Thread-27] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-05-29T23:20:45.633+02:00 DEBUG 67488 --- [back-end] [Thread-27] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d95b8ef, started on Wed May 29 23:14:11 CEST 2024
2024-05-29T23:20:45.637+02:00  INFO 67488 --- [back-end] [Thread-27] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:20:45.637+02:00  INFO 67488 --- [back-end] [Thread-27] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Shutdown initiated...
2024-05-29T23:20:45.638+02:00  INFO 67488 --- [back-end] [Thread-27] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Shutdown completed.
2024-05-29T23:20:45.670+02:00 DEBUG 67488 --- [back-end] [Thread-27] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-05-29T23:20:45.688+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 67488 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-05-29T23:20:45.688+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-05-29T23:20:45.688+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-05-29T23:20:45.690+02:00 DEBUG 67488 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6dc5210f
2024-05-29T23:20:45.766+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-29T23:20:45.767+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-05-29T23:20:45.777+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 7 JPA repository interfaces.
2024-05-29T23:20:45.808+02:00  WARN 67488 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-29T23:20:45.809+02:00  INFO 67488 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-05-29T23:20:45.829+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:20:45.829+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:20:45.829+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-05-29T23:20:45.833+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-05-29T23:20:45.833+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-29T23:20:45.833+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-29T23:20:45.843+02:00  INFO 67488 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-29T23:20:45.843+02:00 DEBUG 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-05-29T23:20:45.843+02:00  INFO 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 153 ms
2024-05-29T23:20:45.849+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-05-29T23:20:45.849+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-05-29T23:20:45.849+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-05-29T23:20:45.849+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-05-29T23:20:45.849+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-05-29T23:20:45.863+02:00  INFO 67488 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-29T23:20:45.865+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-29T23:20:45.866+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-29T23:20:45.867+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-8 - Starting...
2024-05-29T23:20:45.902+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-8 - Added connection org.postgresql.jdbc.PgConnection@41b2968
2024-05-29T23:20:45.903+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-8 - Start completed.
2024-05-29T23:20:45.907+02:00  WARN 67488 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-29T23:20:45.977+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-29T23:20:46.034+02:00  INFO 67488 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:20:46.092+02:00  WARN 67488 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-29T23:20:46.106+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 33 mappings in 'requestMappingHandlerMapping'
2024-05-29T23:20:46.122+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-05-29T23:20:46.127+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-05-29T23:20:46.129+02:00 DEBUG 67488 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-05-29T23:20:46.133+02:00 DEBUG 67488 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-05-29T23:20:46.149+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-05-29T23:20:46.156+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-05-29T23:20:46.158+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-05-29T23:20:46.159+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.486 seconds (process running for 7396.295)
2024-05-29T23:20:46.160+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-05-29T23:20:46.160+02:00  INFO 67488 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-05-29T23:20:46.160+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-05-29T23:20:47.581+02:00  INFO 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-29T23:20:47.582+02:00 DEBUG 67488 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\TableController.class (ADD)]]
2024-05-29T23:20:47.582+02:00 DEBUG 67488 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-05-29T23:20:47.582+02:00 DEBUG 67488 --- [back-end] [Thread-31] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-05-29T23:20:47.582+02:00 DEBUG 67488 --- [back-end] [Thread-31] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-05-29T23:20:47.582+02:00 DEBUG 67488 --- [back-end] [Thread-31] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6dc5210f, started on Wed May 29 23:20:45 CEST 2024
2024-05-29T23:20:47.585+02:00  INFO 67488 --- [back-end] [Thread-31] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:20:47.586+02:00  INFO 67488 --- [back-end] [Thread-31] com.zaxxer.hikari.HikariDataSource       : HikariPool-8 - Shutdown initiated...
2024-05-29T23:20:47.587+02:00  INFO 67488 --- [back-end] [Thread-31] com.zaxxer.hikari.HikariDataSource       : HikariPool-8 - Shutdown completed.
2024-05-29T23:20:47.612+02:00 DEBUG 67488 --- [back-end] [Thread-31] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-05-29T23:20:47.627+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 67488 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-05-29T23:20:47.627+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-05-29T23:20:47.627+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-05-29T23:20:47.628+02:00 DEBUG 67488 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b07f4c
2024-05-29T23:20:47.713+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-29T23:20:47.713+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-05-29T23:20:47.723+02:00  INFO 67488 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 7 JPA repository interfaces.
2024-05-29T23:20:47.748+02:00  WARN 67488 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-29T23:20:47.749+02:00  INFO 67488 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-05-29T23:20:47.762+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:20:47.762+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-05-29T23:20:47.762+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-05-29T23:20:47.768+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-05-29T23:20:47.769+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-29T23:20:47.769+02:00  INFO 67488 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-29T23:20:47.776+02:00  INFO 67488 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-29T23:20:47.776+02:00 DEBUG 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-05-29T23:20:47.776+02:00  INFO 67488 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 148 ms
2024-05-29T23:20:47.780+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-05-29T23:20:47.780+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-05-29T23:20:47.781+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-05-29T23:20:47.781+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-05-29T23:20:47.781+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-05-29T23:20:47.802+02:00  INFO 67488 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-29T23:20:47.803+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-29T23:20:47.805+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-29T23:20:47.806+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Starting...
2024-05-29T23:20:47.851+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-9 - Added connection org.postgresql.jdbc.PgConnection@3ad03857
2024-05-29T23:20:47.851+02:00  INFO 67488 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Start completed.
2024-05-29T23:20:47.856+02:00  WARN 67488 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-29T23:20:47.911+02:00  INFO 67488 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-29T23:20:47.971+02:00  INFO 67488 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-29T23:20:48.041+02:00  WARN 67488 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-29T23:20:48.057+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 39 mappings in 'requestMappingHandlerMapping'
2024-05-29T23:20:48.072+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-05-29T23:20:48.077+02:00 DEBUG 67488 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-05-29T23:20:48.079+02:00 DEBUG 67488 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-05-29T23:20:48.083+02:00 DEBUG 67488 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-05-29T23:20:48.101+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-05-29T23:20:48.109+02:00  INFO 67488 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-05-29T23:20:48.111+02:00 DEBUG 67488 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-05-29T23:20:48.114+02:00  INFO 67488 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.498 seconds (process running for 7398.25)
2024-05-29T23:20:48.115+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-05-29T23:20:48.115+02:00  INFO 67488 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-05-29T23:20:48.115+02:00 DEBUG 67488 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
