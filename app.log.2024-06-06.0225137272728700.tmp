2024-06-06T13:21:10.963+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 28664 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-06-06T13:21:10.972+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-06-06T13:21:10.972+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-06-06T13:21:11.001+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : Matching URLs for reloading : [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-06-06T13:21:11.002+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.d.settings.DevToolsSettings        : Included patterns for restart : []
2024-06-06T13:21:11.002+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.d.settings.DevToolsSettings        : Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
2024-06-06T13:21:11.002+02:00  INFO 28664 --- [back-end] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-06-06T13:21:11.002+02:00  INFO 28664 --- [back-end] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-06-06T13:21:11.002+02:00 DEBUG 28664 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6787118f
2024-06-06T13:21:11.487+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-06T13:21:11.496+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-06-06T13:21:11.524+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33 ms. Found 7 JPA repository interfaces.
2024-06-06T13:21:11.666+02:00  WARN 28664 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-06-06T13:21:11.678+02:00  INFO 28664 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-06-06T13:21:11.951+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T13:21:11.951+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T13:21:11.952+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-06-06T13:21:11.973+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-06-06T13:21:11.986+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-06-06T13:21:11.987+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-06-06T13:21:12.017+02:00  INFO 28664 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-06-06T13:21:12.017+02:00 DEBUG 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-06-06T13:21:12.017+02:00  INFO 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1015 ms
2024-06-06T13:21:12.128+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-06-06T13:21:12.129+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-06-06T13:21:12.147+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-06-06T13:21:12.149+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2024-06-06T13:21:12.149+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-06-06T13:21:12.149+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-06-06T13:21:12.246+02:00  INFO 28664 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-06T13:21:12.279+02:00  INFO 28664 --- [back-end] [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-06-06T13:21:12.299+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-06-06T13:21:12.669+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-06T13:21:12.707+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-06-06T13:21:12.859+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@37c37242
2024-06-06T13:21:12.860+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-06-06T13:21:12.881+02:00  WARN 28664 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-06T13:21:13.591+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-06T13:21:13.683+02:00  INFO 28664 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T13:21:14.055+02:00  WARN 28664 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-06T13:21:14.143+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 43 mappings in 'requestMappingHandlerMapping'
2024-06-06T13:21:14.222+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-06-06T13:21:14.249+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-06-06T13:21:14.278+02:00 DEBUG 28664 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-06-06T13:21:14.499+02:00 DEBUG 28664 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-06-06T13:21:14.577+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.d.livereload.LiveReloadServer      : Starting live reload server on port 35729
2024-06-06T13:21:14.578+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-06-06T13:21:14.585+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-06-06T13:21:14.638+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-06-06T13:21:14.649+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a single bean 'mbeanServer' (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.name app.log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration#observedAspect matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.aop.ObservedAspect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksObservabilityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.jcache.JCacheCache', 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MetricsAspectsAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.ManagementObservationsEnabledCondition @ConditionalOnProperty (management.observations.annotations.enabled=true) did not find property 'enabled'; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.MicrometerObservationsEnabledCondition @ConditionalOnProperty (micrometer.observations.annotations.enabled=true) did not find property 'enabled' (MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition)
      Matched:
         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopTracerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveHealthEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Sender' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-06-06T13:21:14.652+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 3.898 seconds (process running for 4.286)
2024-06-06T13:21:14.654+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-06-06T13:21:14.656+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.boot.devtools.restart.Restarter      : Creating new Restarter for thread Thread[#1,main,5,main]
2024-06-06T13:21:14.656+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.boot.devtools.restart.Restarter      : Immediately restarting application
2024-06-06T13:21:14.656+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-06-06T13:21:14.656+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-06-06T13:21:15.097+02:00  INFO 28664 --- [back-end] [RMI TCP Connection(7)-172.20.9.211] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-06T13:21:15.097+02:00  INFO 28664 --- [back-end] [RMI TCP Connection(7)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-06-06T13:21:15.097+02:00 DEBUG 28664 --- [back-end] [RMI TCP Connection(7)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2024-06-06T13:21:15.097+02:00 DEBUG 28664 --- [back-end] [RMI TCP Connection(7)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2024-06-06T13:21:15.097+02:00 DEBUG 28664 --- [back-end] [RMI TCP Connection(7)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2024-06-06T13:21:15.098+02:00 DEBUG 28664 --- [back-end] [RMI TCP Connection(7)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@22fcbc5e
2024-06-06T13:21:15.098+02:00 DEBUG 28664 --- [back-end] [RMI TCP Connection(7)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@1f59d723
2024-06-06T13:21:15.099+02:00 DEBUG 28664 --- [back-end] [RMI TCP Connection(7)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-06-06T13:21:15.099+02:00  INFO 28664 --- [back-end] [RMI TCP Connection(7)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-06-06T13:21:18.662+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/dashboard", parameters={}
2024-06-06T13:21:18.666+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getAllInformation()
2024-06-06T13:21:18.749+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T13:21:18.757+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.767+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.768+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.769+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.770+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.770+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.771+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.772+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.772+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.773+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.773+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.774+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.774+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.775+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.777+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.779+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.779+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.780+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.781+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.781+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:18.818+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T13:21:18.821+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.823+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.824+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.825+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.826+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.827+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.827+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.828+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.828+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.829+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.829+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.829+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.831+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.831+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.831+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.832+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.833+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.833+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.834+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.834+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.834+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.835+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.835+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.835+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.836+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.836+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.836+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.837+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.837+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.838+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.838+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.839+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:18.841+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T13:21:18.843+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-06-06T13:21:18.844+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.firstname,
        u1_0.lastname,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        _user u1_0
2024-06-06T13:21:18.846+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T13:21:18.848+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T13:21:18.858+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:21:18.861+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.862+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.864+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.866+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.867+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.868+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.871+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.873+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.874+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.877+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.878+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.879+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.880+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.880+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:18.882+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:18.883+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:18.883+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.884+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.885+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.886+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:18.886+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.887+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.888+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.889+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:18.891+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.892+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.893+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:18.894+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.894+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.895+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.895+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.896+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:18.897+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.898+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.898+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:18.899+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.899+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.899+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.899+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.901+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.902+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.903+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.903+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.904+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.904+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.905+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.905+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.906+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.906+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.907+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.907+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.908+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.908+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.909+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.911+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.911+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.911+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.912+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.913+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.913+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.914+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.914+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.915+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.917+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.918+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.919+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.920+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.920+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.920+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.921+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.921+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.922+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.922+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.923+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.924+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.924+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.925+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.925+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.926+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.926+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.926+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.927+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.927+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.928+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.928+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.928+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:18.929+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.929+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:18.931+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:18.931+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:18.932+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.932+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.933+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.933+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.934+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.935+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.935+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.936+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.937+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.937+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.938+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.938+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.938+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.939+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.939+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.939+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.941+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.941+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.941+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.942+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.942+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.942+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.943+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.944+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.944+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.944+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.945+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.946+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.946+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.948+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.948+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.949+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.949+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.949+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.950+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.950+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.951+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.951+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.951+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.952+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.954+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.954+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.955+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.955+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.955+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.956+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.957+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.957+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.958+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.958+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.958+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.959+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.959+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.960+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.960+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.961+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.961+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.962+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.962+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.962+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.963+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.963+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.963+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.964+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.964+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.964+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.965+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.965+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.965+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.966+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.966+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.966+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.967+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.967+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.967+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.968+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.968+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.968+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.968+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.972+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.980+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.980+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.986+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.986+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.986+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:18.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:18.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.992+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.992+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.992+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:18.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:18.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [DashBoardAllInformation(tableList=[Table(id=11, name=Table 11, seats_amount=4, status=Now_Occupied,  (truncated)...]
2024-06-06T13:21:19.032+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/dashboard", parameters={}
2024-06-06T13:21:19.032+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getAllInformation()
2024-06-06T13:21:19.034+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T13:21:19.037+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.039+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.044+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.044+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.044+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.046+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.046+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.046+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:21:19.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T13:21:19.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/dashboard/reservations-per-day", parameters={}
2024-06-06T13:21:19.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getReservationsPerDay()
2024-06-06T13:21:19.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T13:21:19.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.065+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.065+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.065+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:21:19.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T13:21:19.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:21:19.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing [{MONDAY=166, SUNDAY=179, SATURDAY=166, THURSDAY=190, WEDNESDAY=206, TUESDAY=179, FRIDAY=166}]
2024-06-06T13:21:19.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-06-06T13:21:19.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:21:19.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.firstname,
        u1_0.lastname,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        _user u1_0
2024-06-06T13:21:19.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T13:21:19.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T13:21:19.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:21:19.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.083+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.083+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:19.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:19.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:19.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.088+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.088+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.088+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:19.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:19.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:19.092+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.092+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.092+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:19.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:21:19.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.097+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.097+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.097+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.098+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.098+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.098+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.099+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.100+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.100+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.106+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.106+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.106+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.106+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.107+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.107+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.107+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.107+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.107+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.109+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.109+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.109+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:21:19.109+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.111+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:21:19.111+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:19.112+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:19.112+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.112+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.113+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.113+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.113+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.125+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.125+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.125+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.125+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:19.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:21:19.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.142+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.142+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.142+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.142+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.142+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.142+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.145+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.145+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.145+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.145+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:21:19.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.147+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:21:19.149+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [DashBoardAllInformation(tableList=[Table(id=11, name=Table 11, seats_amount=4, status=Now_Occupied,  (truncated)...]
2024-06-06T13:21:19.160+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:21:19.165+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/dashboard/reservations-per-day", parameters={}
2024-06-06T13:21:19.166+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getReservationsPerDay()
2024-06-06T13:21:19.169+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T13:21:19.171+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.171+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.171+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.172+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.172+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.173+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.173+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.173+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.173+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.173+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.174+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.174+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.174+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.174+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.174+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.175+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.175+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.175+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.175+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.175+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:21:19.182+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:21:19.183+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [{MONDAY=166, SUNDAY=179, SATURDAY=166, THURSDAY=190, WEDNESDAY=206, TUESDAY=179, FRIDAY=166}]
2024-06-06T13:21:19.184+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:26:00.410+02:00  INFO 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-06-06T13:26:00.411+02:00 DEBUG 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\DashboardController.class (DELETE)]]
2024-06-06T13:26:00.411+02:00 DEBUG 28664 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-06-06T13:26:00.412+02:00 DEBUG 28664 --- [back-end] [Thread-5] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-06-06T13:26:00.412+02:00 DEBUG 28664 --- [back-end] [Thread-5] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-06-06T13:26:00.412+02:00 DEBUG 28664 --- [back-end] [Thread-5] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6787118f, started on Thu Jun 06 13:21:11 CEST 2024
2024-06-06T13:26:00.421+02:00  INFO 28664 --- [back-end] [Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T13:26:00.423+02:00  INFO 28664 --- [back-end] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-06-06T13:26:00.425+02:00  INFO 28664 --- [back-end] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-06-06T13:26:00.469+02:00 DEBUG 28664 --- [back-end] [Thread-5] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-06-06T13:26:00.484+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 28664 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-06-06T13:26:00.485+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-06-06T13:26:00.485+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-06-06T13:26:00.486+02:00 DEBUG 28664 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2911f677
2024-06-06T13:26:00.663+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-06T13:26:00.663+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-06-06T13:26:00.674+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 7 JPA repository interfaces.
2024-06-06T13:26:00.704+02:00  WARN 28664 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-06-06T13:26:00.705+02:00  INFO 28664 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-06-06T13:26:00.774+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T13:26:00.774+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T13:26:00.774+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-06-06T13:26:00.779+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-06-06T13:26:00.779+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-06-06T13:26:00.780+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-06-06T13:26:00.791+02:00  INFO 28664 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-06-06T13:26:00.791+02:00 DEBUG 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-06-06T13:26:00.791+02:00  INFO 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 305 ms
2024-06-06T13:26:00.832+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-06-06T13:26:00.832+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-06-06T13:26:00.833+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-06-06T13:26:00.833+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2024-06-06T13:26:00.833+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-06-06T13:26:00.833+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-06-06T13:26:00.860+02:00  INFO 28664 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-06T13:26:00.861+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-06-06T13:26:00.863+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-06T13:26:00.864+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-06-06T13:26:00.899+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@ab704b5
2024-06-06T13:26:00.899+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-06-06T13:26:00.905+02:00  WARN 28664 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-06T13:26:00.987+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-06T13:26:01.055+02:00  INFO 28664 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T13:26:01.175+02:00  WARN 28664 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-06T13:26:01.203+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 43 mappings in 'requestMappingHandlerMapping'
2024-06-06T13:26:01.239+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-06-06T13:26:01.249+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-06-06T13:26:01.254+02:00 DEBUG 28664 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-06-06T13:26:01.344+02:00 DEBUG 28664 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-06-06T13:26:01.376+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-06-06T13:26:01.379+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-06-06T13:26:01.393+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-06-06T13:26:01.396+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a single bean 'mbeanServer' (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.name app.log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration#observedAspect matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.aop.ObservedAspect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksObservabilityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.jcache.JCacheCache', 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MetricsAspectsAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.ManagementObservationsEnabledCondition @ConditionalOnProperty (management.observations.annotations.enabled=true) did not find property 'enabled'; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.MicrometerObservationsEnabledCondition @ConditionalOnProperty (micrometer.observations.annotations.enabled=true) did not find property 'enabled' (MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition)
      Matched:
         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopTracerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveHealthEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Sender' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-06-06T13:26:01.398+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.926 seconds (process running for 291.032)
2024-06-06T13:26:01.399+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-06-06T13:26:01.399+02:00  INFO 28664 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-06-06T13:26:01.399+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-06-06T13:26:02.801+02:00  INFO 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-06-06T13:26:02.801+02:00 DEBUG 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\DashboardController.class (ADD)]]
2024-06-06T13:26:02.801+02:00 DEBUG 28664 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-06-06T13:26:02.802+02:00 DEBUG 28664 --- [back-end] [Thread-7] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-06-06T13:26:02.802+02:00 DEBUG 28664 --- [back-end] [Thread-7] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-06-06T13:26:02.802+02:00 DEBUG 28664 --- [back-end] [Thread-7] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2911f677, started on Thu Jun 06 13:26:00 CEST 2024
2024-06-06T13:26:02.806+02:00  INFO 28664 --- [back-end] [Thread-7] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T13:26:02.807+02:00  INFO 28664 --- [back-end] [Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2024-06-06T13:26:02.808+02:00  INFO 28664 --- [back-end] [Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2024-06-06T13:26:02.843+02:00 DEBUG 28664 --- [back-end] [Thread-7] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-06-06T13:26:02.856+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 28664 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-06-06T13:26:02.856+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-06-06T13:26:02.856+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-06-06T13:26:02.857+02:00 DEBUG 28664 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@479ef6b
2024-06-06T13:26:02.981+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-06T13:26:02.981+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-06-06T13:26:03.005+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23 ms. Found 7 JPA repository interfaces.
2024-06-06T13:26:03.064+02:00  WARN 28664 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-06-06T13:26:03.065+02:00  INFO 28664 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-06-06T13:26:03.108+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T13:26:03.108+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T13:26:03.108+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-06-06T13:26:03.112+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-06-06T13:26:03.112+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-06-06T13:26:03.112+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-06-06T13:26:03.122+02:00  INFO 28664 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-06-06T13:26:03.122+02:00 DEBUG 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-06-06T13:26:03.122+02:00  INFO 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 265 ms
2024-06-06T13:26:03.155+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-06-06T13:26:03.156+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-06-06T13:26:03.156+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-06-06T13:26:03.156+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2024-06-06T13:26:03.156+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-06-06T13:26:03.156+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-06-06T13:26:03.176+02:00  INFO 28664 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-06T13:26:03.177+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-06-06T13:26:03.179+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-06T13:26:03.179+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2024-06-06T13:26:03.211+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@cd921d6
2024-06-06T13:26:03.212+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2024-06-06T13:26:03.216+02:00  WARN 28664 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-06T13:26:03.275+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-06T13:26:03.334+02:00  INFO 28664 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T13:26:03.432+02:00  WARN 28664 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-06T13:26:03.457+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 43 mappings in 'requestMappingHandlerMapping'
2024-06-06T13:26:03.490+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-06-06T13:26:03.499+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-06-06T13:26:03.505+02:00 DEBUG 28664 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-06-06T13:26:03.598+02:00 DEBUG 28664 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-06-06T13:26:03.626+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-06-06T13:26:03.629+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-06-06T13:26:03.645+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-06-06T13:26:03.649+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a single bean 'mbeanServer' (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.name app.log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration#observedAspect matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.aop.ObservedAspect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksObservabilityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.jcache.JCacheCache', 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MetricsAspectsAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.ManagementObservationsEnabledCondition @ConditionalOnProperty (management.observations.annotations.enabled=true) did not find property 'enabled'; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.MicrometerObservationsEnabledCondition @ConditionalOnProperty (micrometer.observations.annotations.enabled=true) did not find property 'enabled' (MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition)
      Matched:
         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopTracerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveHealthEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Sender' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-06-06T13:26:03.651+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.805 seconds (process running for 293.285)
2024-06-06T13:26:03.651+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-06-06T13:26:03.651+02:00  INFO 28664 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-06-06T13:26:03.652+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-06-06T13:26:54.922+02:00  INFO 28664 --- [back-end] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-06T13:26:54.922+02:00  INFO 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-06-06T13:26:54.922+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2024-06-06T13:26:54.922+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2024-06-06T13:26:54.922+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2024-06-06T13:26:54.923+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@63b6bafd
2024-06-06T13:26:54.923+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@46c6b02f
2024-06-06T13:26:54.923+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-06-06T13:26:54.923+02:00  INFO 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-06-06T13:26:54.924+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/dashboard", parameters={}
2024-06-06T13:26:54.924+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getAllInformation()
2024-06-06T13:26:54.930+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T13:26:54.933+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.935+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.935+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.935+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.935+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.935+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.936+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.936+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.936+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.936+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.936+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.936+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.937+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.937+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.937+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.937+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.937+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.938+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.938+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.938+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:54.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T13:26:54.948+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.949+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.949+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.950+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.950+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.950+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.950+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.951+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.951+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.951+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.951+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.951+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.951+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.952+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.952+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.952+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.954+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.954+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.954+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.954+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.954+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.954+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.955+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:54.956+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T13:26:54.958+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-06-06T13:26:54.959+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.firstname,
        u1_0.lastname,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        _user u1_0
2024-06-06T13:26:54.962+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T13:26:54.964+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T13:26:54.966+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:26:54.966+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.966+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.967+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:54.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:54.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:54.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:54.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:54.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:54.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:54.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:54.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:54.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:54.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:54.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:54.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:54.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:54.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.986+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.992+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.992+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.992+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.992+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:54.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:54.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:54.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:54.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:54.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:54.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:54.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.004+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.004+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.004+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.004+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.004+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.004+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.004+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.005+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.005+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.005+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.005+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.005+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.005+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.006+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.006+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.006+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.006+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.006+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.007+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.007+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.007+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.007+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.014+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.014+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.014+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.014+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.015+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.015+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.015+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.015+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.018+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.018+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.018+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.018+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.018+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.018+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.020+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.020+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.020+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.020+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.020+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.020+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.020+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.021+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.021+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.021+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.021+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.021+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.022+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:55.022+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:55.023+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.023+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.023+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.023+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.023+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.023+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.023+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.036+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [DashBoardAllInformation(tableList=[Table(id=11, name=Table 11, seats_amount=4, status=Now_Occupied,  (truncated)...]
2024-06-06T13:26:55.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/dashboard", parameters={}
2024-06-06T13:26:55.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getAllInformation()
2024-06-06T13:26:55.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T13:26:55.050+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:26:55.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/dashboard/reservations-per-day", parameters={}
2024-06-06T13:26:55.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getReservationsPerDay()
2024-06-06T13:26:55.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T13:26:55.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.065+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:26:55.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T13:26:55.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date between ? and ?
2024-06-06T13:26:55.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-06-06T13:26:55.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.firstname,
        u1_0.lastname,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        _user u1_0
2024-06-06T13:26:55.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T13:26:55.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T13:26:55.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:26:55.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.083+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.083+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:26:55.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [{MONDAY=5, SUNDAY=6, SATURDAY=1, THURSDAY=9, WEDNESDAY=6, TUESDAY=8, FRIDAY=3}]
2024-06-06T13:26:55.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:26:55.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:55.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:55.088+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:55.088+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.088+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.088+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:55.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:55.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.092+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.092+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:55.092+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.092+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:55.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:26:55.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.097+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.097+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.097+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.098+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.098+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.099+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.099+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.099+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.099+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.099+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.099+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.106+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.106+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.106+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.106+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.107+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.107+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.107+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.109+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.109+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.109+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.109+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.109+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.110+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.110+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.110+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.110+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:26:55.111+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.111+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:26:55.111+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:55.112+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:55.112+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.112+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.113+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.113+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.113+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.113+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.115+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.116+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.117+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.118+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.119+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.120+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.121+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.122+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.123+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.124+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.125+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.125+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.125+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.125+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.125+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.126+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.129+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:55.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:26:55.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.138+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.139+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.140+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:26:55.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:26:55.143+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [DashBoardAllInformation(tableList=[Table(id=11, name=Table 11, seats_amount=4, status=Now_Occupied,  (truncated)...]
2024-06-06T13:26:55.149+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:26:55.156+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/dashboard/reservations-per-day", parameters={}
2024-06-06T13:26:55.156+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getReservationsPerDay()
2024-06-06T13:26:55.157+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date between ? and ?
2024-06-06T13:26:55.158+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.158+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.158+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.160+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.160+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.160+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.160+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.161+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.161+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:26:55.162+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:26:55.162+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [{MONDAY=5, SUNDAY=6, SATURDAY=1, THURSDAY=9, WEDNESDAY=6, TUESDAY=8, FRIDAY=3}]
2024-06-06T13:26:55.162+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:53:56.984+02:00  WARN 28664 --- [back-end] [HikariPool-3 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Thread starvation or clock leap detected (housekeeper delta=13m23s458ms564µs).
2024-06-06T13:54:13.938+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-06-06T13:54:13.938+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-06-06T13:54:13.942+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T13:54:13.942+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.943+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.943+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.943+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.943+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.944+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.944+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.944+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.944+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.945+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.945+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.945+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.945+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.945+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.946+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.946+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.946+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.946+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.946+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.947+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.948+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.948+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.948+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.948+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.948+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:13.949+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T13:54:13.950+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T13:54:13.952+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:54:13.952+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:13.952+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:13.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.953+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.955+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:13.955+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.956+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.956+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:13.957+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:13.957+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:13.957+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:13.959+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:13.959+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:13.960+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.960+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:13.960+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:13.961+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:13.962+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:13.963+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:13.963+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.963+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:13.964+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:13.964+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:13.964+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:13.966+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:13.966+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.967+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.967+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.967+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.967+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.968+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.968+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:13.968+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:13.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.969+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.970+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.971+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.972+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.972+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.972+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.972+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.972+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.972+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.973+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.974+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.975+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.976+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.977+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.978+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.979+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.980+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.980+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.980+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.981+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.982+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.983+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.984+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.985+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.986+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.986+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.986+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.986+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.986+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.987+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.988+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.989+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.990+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:13.991+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.993+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.994+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.995+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.996+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:13.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:13.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.000+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.001+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.002+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.003+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.004+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-06-06T13:54:14.006+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:54:14.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-06-06T13:54:14.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-06-06T13:54:14.010+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T13:54:14.010+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.013+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.014+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.014+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.014+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.014+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.015+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.015+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.015+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.016+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.017+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.018+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.019+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.020+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.020+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:54:14.021+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T13:54:14.023+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T13:54:14.023+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:54:14.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:14.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:14.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.025+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:14.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:14.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:14.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:14.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:14.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:14.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:14.030+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.030+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:14.030+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:14.031+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:14.032+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:14.033+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:14.034+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.034+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:54:14.034+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:14.035+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:54:14.035+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:14.036+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:54:14.037+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.037+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.038+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.038+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.038+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.039+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.039+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:14.039+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:14.040+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.040+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.040+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.040+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.044+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.044+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.044+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.044+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.044+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.046+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.046+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.046+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.046+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.046+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.048+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.048+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.048+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.048+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.048+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.048+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.049+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.049+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.049+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.049+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.050+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.050+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.050+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.051+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.051+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.051+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.051+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.060+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.060+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.060+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.060+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.060+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.060+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.065+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.065+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.065+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.068+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:14.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:54:14.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:54:14.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:54:14.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-06-06T13:54:14.083+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:56:59.997+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/dashboard", parameters={}
2024-06-06T13:56:59.998+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getAllInformation()
2024-06-06T13:56:59.999+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T13:57:00.004+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.006+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.006+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.006+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.007+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.007+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.008+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.009+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.010+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.010+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.011+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.012+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.022+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T13:57:00.024+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.026+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.027+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.028+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.029+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.030+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.030+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.030+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.031+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.031+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.031+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.032+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.032+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.032+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.033+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.033+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.033+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.033+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.033+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.034+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T13:57:00.037+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-06-06T13:57:00.038+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.firstname,
        u1_0.lastname,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        _user u1_0
2024-06-06T13:57:00.039+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T13:57:00.040+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T13:57:00.040+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:57:00.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.041+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.042+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.043+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.044+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.045+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.047+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.049+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.049+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.049+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.050+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.050+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.051+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.051+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.052+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.053+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.054+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.055+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.056+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.057+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.058+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.059+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.060+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.060+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.060+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.061+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.062+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.063+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.064+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.065+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.065+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.066+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.067+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.069+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.070+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.071+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.072+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.073+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.074+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.075+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.076+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.077+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.078+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.079+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.080+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.081+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.082+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.084+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.085+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.086+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.087+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.089+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.090+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.091+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.092+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.092+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.093+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.094+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.095+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.096+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.100+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.101+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.102+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.103+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.104+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.105+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.108+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [DashBoardAllInformation(tableList=[Table(id=11, name=Table 11, seats_amount=4, status=Now_Occupied,  (truncated)...]
2024-06-06T13:57:00.111+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/dashboard", parameters={}
2024-06-06T13:57:00.112+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getAllInformation()
2024-06-06T13:57:00.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:57:00.114+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T13:57:00.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.127+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/dashboard/reservations-per-day", parameters={}
2024-06-06T13:57:00.128+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getReservationsPerDay()
2024-06-06T13:57:00.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date between ? and ?
2024-06-06T13:57:00.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.130+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.131+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.132+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.133+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.134+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.135+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:57:00.136+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [{MONDAY=5, SUNDAY=6, SATURDAY=1, THURSDAY=9, WEDNESDAY=6, TUESDAY=8, FRIDAY=3}]
2024-06-06T13:57:00.137+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:57:00.141+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T13:57:00.142+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.144+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.145+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.145+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.145+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.145+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.146+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.147+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.147+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.147+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.148+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.148+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.149+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.149+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.149+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.149+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.150+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.150+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.150+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.150+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.150+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.151+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.151+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.151+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.151+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.151+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.151+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T13:57:00.152+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T13:57:00.154+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-06-06T13:57:00.156+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.firstname,
        u1_0.lastname,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        _user u1_0
2024-06-06T13:57:00.157+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T13:57:00.157+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T13:57:00.158+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:57:00.158+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.158+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.159+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.160+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.160+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.160+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.161+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.162+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.162+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.163+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.163+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.163+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.165+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.165+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.165+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.165+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.165+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.166+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.166+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.166+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.167+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.167+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.168+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.169+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.169+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.169+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.170+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.170+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.170+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.171+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.171+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.172+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.172+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T13:57:00.173+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.173+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.173+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.173+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.174+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.174+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.174+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.174+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.175+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.175+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.176+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.176+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.176+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.177+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.177+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.177+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.177+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.177+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.178+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.178+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.178+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.179+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.179+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.179+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.179+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.180+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.180+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.180+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.181+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.181+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.182+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.182+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.182+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.183+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.183+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.183+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.184+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.184+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.184+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.185+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.185+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.185+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.185+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.186+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.186+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.186+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.186+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.187+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.187+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.187+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.187+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T13:57:00.188+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.188+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T13:57:00.190+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.190+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.190+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.191+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.191+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.191+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.191+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.192+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.192+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.192+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.192+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.193+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.193+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.193+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.193+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.193+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.193+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.194+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.194+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.194+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.194+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.194+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.194+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.194+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.195+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.195+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.195+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.195+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.195+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.196+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.196+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.197+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.197+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.197+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.198+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.198+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.198+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.198+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.198+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.199+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.199+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.199+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.199+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.199+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.199+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.200+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.200+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.200+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.200+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.200+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.201+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.201+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.201+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.201+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.201+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.201+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.202+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.202+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.202+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.203+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.203+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.203+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.204+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.204+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.204+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.204+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.204+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.205+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.205+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.205+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.205+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.205+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.206+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.206+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.206+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.206+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.206+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.206+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.207+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.209+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.209+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.209+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.209+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.209+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.209+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.210+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.210+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.210+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.210+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.211+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.211+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.211+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.211+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.211+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.211+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.212+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.212+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.212+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.212+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.212+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.213+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.213+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.213+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.213+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.213+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.213+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.213+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.214+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.214+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.214+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.214+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.214+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.215+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.215+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.215+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.215+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.215+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.215+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.215+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.216+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.216+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.216+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.217+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.217+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.218+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.218+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.218+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.219+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.219+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T13:57:00.219+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.219+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.219+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.220+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.220+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.220+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.220+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.220+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.220+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.220+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.220+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.220+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.221+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.221+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.221+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.221+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.221+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.222+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.222+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.222+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.222+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.222+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.222+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.223+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.223+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.223+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.223+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.224+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.224+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.224+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.224+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.224+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.224+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.225+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.225+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.225+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.225+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.225+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.225+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.226+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T13:57:00.227+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.227+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.227+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.227+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.227+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T13:57:00.230+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [DashBoardAllInformation(tableList=[Table(id=11, name=Table 11, seats_amount=4, status=Now_Occupied,  (truncated)...]
2024-06-06T13:57:00.235+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T13:57:00.240+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/dashboard/reservations-per-day", parameters={}
2024-06-06T13:57:00.240+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getReservationsPerDay()
2024-06-06T13:57:00.241+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date between ? and ?
2024-06-06T13:57:00.241+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.242+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.242+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.242+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.242+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.242+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.242+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.243+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.243+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.243+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.243+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.243+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.243+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.244+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.244+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.244+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.244+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T13:57:00.245+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T13:57:00.245+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [{MONDAY=5, SUNDAY=6, SATURDAY=1, THURSDAY=9, WEDNESDAY=6, TUESDAY=8, FRIDAY=3}]
2024-06-06T13:57:00.246+02:00 DEBUG 28664 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T14:03:01.724+02:00  INFO 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-06-06T14:03:01.724+02:00 DEBUG 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\DashboardController.class (DELETE)]]
2024-06-06T14:03:01.724+02:00 DEBUG 28664 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-06-06T14:03:01.725+02:00 DEBUG 28664 --- [back-end] [Thread-11] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-06-06T14:03:01.725+02:00 DEBUG 28664 --- [back-end] [Thread-11] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-06-06T14:03:01.725+02:00 DEBUG 28664 --- [back-end] [Thread-11] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@479ef6b, started on Thu Jun 06 13:26:02 CEST 2024
2024-06-06T14:03:01.729+02:00  INFO 28664 --- [back-end] [Thread-11] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T14:03:01.730+02:00  INFO 28664 --- [back-end] [Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2024-06-06T14:03:01.732+02:00  INFO 28664 --- [back-end] [Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2024-06-06T14:03:01.768+02:00 DEBUG 28664 --- [back-end] [Thread-11] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-06-06T14:03:01.787+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 28664 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-06-06T14:03:01.787+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-06-06T14:03:01.787+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-06-06T14:03:01.788+02:00 DEBUG 28664 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32204326
2024-06-06T14:03:01.937+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-06T14:03:01.937+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-06-06T14:03:01.945+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 7 JPA repository interfaces.
2024-06-06T14:03:01.974+02:00  WARN 28664 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-06-06T14:03:01.975+02:00  INFO 28664 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-06-06T14:03:02.023+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T14:03:02.023+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T14:03:02.023+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-06-06T14:03:02.027+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-06-06T14:03:02.028+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-06-06T14:03:02.028+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-06-06T14:03:02.037+02:00  INFO 28664 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-06-06T14:03:02.037+02:00 DEBUG 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-06-06T14:03:02.037+02:00  INFO 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 249 ms
2024-06-06T14:03:02.087+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-06-06T14:03:02.087+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-06-06T14:03:02.088+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-06-06T14:03:02.088+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2024-06-06T14:03:02.088+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-06-06T14:03:02.088+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-06-06T14:03:02.114+02:00  INFO 28664 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-06T14:03:02.115+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-06-06T14:03:02.117+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-06T14:03:02.118+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2024-06-06T14:03:02.149+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@66724e21
2024-06-06T14:03:02.150+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2024-06-06T14:03:02.155+02:00  WARN 28664 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-06T14:03:02.214+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-06T14:03:02.275+02:00  INFO 28664 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T14:03:02.386+02:00  WARN 28664 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-06T14:03:02.415+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 43 mappings in 'requestMappingHandlerMapping'
2024-06-06T14:03:02.452+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-06-06T14:03:02.463+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-06-06T14:03:02.468+02:00 DEBUG 28664 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-06-06T14:03:02.568+02:00 DEBUG 28664 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-06-06T14:03:02.605+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-06-06T14:03:02.608+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-06-06T14:03:02.624+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-06-06T14:03:02.628+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a single bean 'mbeanServer' (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.name app.log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration#observedAspect matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.aop.ObservedAspect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksObservabilityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.jcache.JCacheCache', 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MetricsAspectsAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.ManagementObservationsEnabledCondition @ConditionalOnProperty (management.observations.annotations.enabled=true) did not find property 'enabled'; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.MicrometerObservationsEnabledCondition @ConditionalOnProperty (micrometer.observations.annotations.enabled=true) did not find property 'enabled' (MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition)
      Matched:
         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopTracerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveHealthEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Sender' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-06-06T14:03:02.630+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.858 seconds (process running for 2512.265)
2024-06-06T14:03:02.631+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-06-06T14:03:02.632+02:00  INFO 28664 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-06-06T14:03:02.632+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-06-06T14:03:04.039+02:00  INFO 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-06-06T14:03:04.039+02:00 DEBUG 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\DashboardController.class (ADD)]]
2024-06-06T14:03:04.039+02:00 DEBUG 28664 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-06-06T14:03:04.039+02:00 DEBUG 28664 --- [back-end] [Thread-15] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-06-06T14:03:04.040+02:00 DEBUG 28664 --- [back-end] [Thread-15] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-06-06T14:03:04.040+02:00 DEBUG 28664 --- [back-end] [Thread-15] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32204326, started on Thu Jun 06 14:03:01 CEST 2024
2024-06-06T14:03:04.044+02:00  INFO 28664 --- [back-end] [Thread-15] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T14:03:04.044+02:00  INFO 28664 --- [back-end] [Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2024-06-06T14:03:04.046+02:00  INFO 28664 --- [back-end] [Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.
2024-06-06T14:03:04.078+02:00 DEBUG 28664 --- [back-end] [Thread-15] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-06-06T14:03:04.091+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 28664 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-06-06T14:03:04.091+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-06-06T14:03:04.091+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-06-06T14:03:04.092+02:00 DEBUG 28664 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3156f19f
2024-06-06T14:03:04.202+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-06T14:03:04.202+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-06-06T14:03:04.209+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 7 JPA repository interfaces.
2024-06-06T14:03:04.232+02:00  WARN 28664 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-06-06T14:03:04.232+02:00  INFO 28664 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-06-06T14:03:04.268+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T14:03:04.268+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T14:03:04.268+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-06-06T14:03:04.271+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-06-06T14:03:04.271+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-06-06T14:03:04.271+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-06-06T14:03:04.279+02:00  INFO 28664 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-06-06T14:03:04.279+02:00 DEBUG 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-06-06T14:03:04.279+02:00  INFO 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 187 ms
2024-06-06T14:03:04.322+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-06-06T14:03:04.322+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-06-06T14:03:04.322+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-06-06T14:03:04.323+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2024-06-06T14:03:04.323+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-06-06T14:03:04.323+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-06-06T14:03:04.344+02:00  INFO 28664 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-06T14:03:04.345+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-06-06T14:03:04.347+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-06T14:03:04.347+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Starting...
2024-06-06T14:03:04.379+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-5 - Added connection org.postgresql.jdbc.PgConnection@16a1b75e
2024-06-06T14:03:04.379+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Start completed.
2024-06-06T14:03:04.383+02:00  WARN 28664 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-06T14:03:04.439+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-06T14:03:04.491+02:00  INFO 28664 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T14:03:04.583+02:00  WARN 28664 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-06T14:03:04.607+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 43 mappings in 'requestMappingHandlerMapping'
2024-06-06T14:03:04.644+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-06-06T14:03:04.653+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-06-06T14:03:04.657+02:00 DEBUG 28664 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-06-06T14:03:04.738+02:00 DEBUG 28664 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-06-06T14:03:04.765+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-06-06T14:03:04.767+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-06-06T14:03:04.780+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-06-06T14:03:04.784+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a single bean 'mbeanServer' (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.name app.log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration#observedAspect matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.aop.ObservedAspect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksObservabilityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.jcache.JCacheCache', 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MetricsAspectsAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.ManagementObservationsEnabledCondition @ConditionalOnProperty (management.observations.annotations.enabled=true) did not find property 'enabled'; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.MicrometerObservationsEnabledCondition @ConditionalOnProperty (micrometer.observations.annotations.enabled=true) did not find property 'enabled' (MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition)
      Matched:
         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopTracerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveHealthEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Sender' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-06-06T14:03:04.785+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.705 seconds (process running for 2514.419)
2024-06-06T14:03:04.786+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-06-06T14:03:04.786+02:00  INFO 28664 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-06-06T14:03:04.786+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-06-06T14:14:42.552+02:00  WARN 28664 --- [back-end] [HikariPool-5 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-5 - Thread starvation or clock leap detected (housekeeper delta=11m38s71ms45µs600ns).
2024-06-06T14:14:48.715+02:00  INFO 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-06-06T14:14:48.715+02:00 DEBUG 28664 --- [back-end] [File Watcher] rtingClassPathChangeChangedEventListener : Change set: [C:\Users\32579\IdeaProjects\back-end\target\classes [C:\Users\32579\IdeaProjects\back-end\target\classes\com\example\backend\controllers\DashboardController.class (MODIFY)]]
2024-06-06T14:14:48.715+02:00 DEBUG 28664 --- [back-end] [File Watcher] o.s.boot.devtools.restart.Restarter      : Restarting application
2024-06-06T14:14:48.715+02:00 DEBUG 28664 --- [back-end] [Thread-19] o.s.boot.devtools.restart.Restarter      : Stopping application
2024-06-06T14:14:48.715+02:00 DEBUG 28664 --- [back-end] [Thread-19] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-06-06T14:14:48.715+02:00 DEBUG 28664 --- [back-end] [Thread-19] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3156f19f, started on Thu Jun 06 14:03:04 CEST 2024
2024-06-06T14:14:48.715+02:00  INFO 28664 --- [back-end] [Thread-19] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T14:14:48.715+02:00  INFO 28664 --- [back-end] [Thread-19] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown initiated...
2024-06-06T14:14:48.715+02:00  INFO 28664 --- [back-end] [Thread-19] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown completed.
2024-06-06T14:14:48.765+02:00 DEBUG 28664 --- [back-end] [Thread-19] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-06-06T14:14:48.783+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 28664 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-06-06T14:14:48.783+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-06-06T14:14:48.783+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-06-06T14:14:48.783+02:00 DEBUG 28664 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b58f54
2024-06-06T14:14:49.004+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-06T14:14:49.004+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-06-06T14:14:49.015+02:00  INFO 28664 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 7 JPA repository interfaces.
2024-06-06T14:14:49.047+02:00  WARN 28664 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-06-06T14:14:49.048+02:00  INFO 28664 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-06-06T14:14:49.094+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T14:14:49.094+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T14:14:49.094+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-06-06T14:14:49.094+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-06-06T14:14:49.094+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-06-06T14:14:49.094+02:00  INFO 28664 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-06-06T14:14:49.105+02:00  INFO 28664 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-06-06T14:14:49.105+02:00 DEBUG 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-06-06T14:14:49.105+02:00  INFO 28664 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 322 ms
2024-06-06T14:14:49.146+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-06-06T14:14:49.146+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-06-06T14:14:49.146+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-06-06T14:14:49.147+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2024-06-06T14:14:49.147+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-06-06T14:14:49.147+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-06-06T14:14:49.191+02:00  INFO 28664 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-06T14:14:49.192+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-06-06T14:14:49.194+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-06T14:14:49.195+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Starting...
2024-06-06T14:14:49.234+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-6 - Added connection org.postgresql.jdbc.PgConnection@10c7234b
2024-06-06T14:14:49.234+02:00  INFO 28664 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Start completed.
2024-06-06T14:14:49.239+02:00  WARN 28664 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-06T14:14:49.294+02:00  INFO 28664 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-06T14:14:49.351+02:00  INFO 28664 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T14:14:49.452+02:00  WARN 28664 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-06T14:14:49.479+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 43 mappings in 'requestMappingHandlerMapping'
2024-06-06T14:14:49.522+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-06-06T14:14:49.532+02:00 DEBUG 28664 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-06-06T14:14:49.538+02:00 DEBUG 28664 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-06-06T14:14:49.629+02:00 DEBUG 28664 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-06-06T14:14:49.662+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-06-06T14:14:49.668+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-06-06T14:14:49.683+02:00  INFO 28664 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-06-06T14:14:49.683+02:00 DEBUG 28664 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a single bean 'mbeanServer' (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.name app.log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration#observedAspect matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.aop.ObservedAspect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksObservabilityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.jcache.JCacheCache', 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MetricsAspectsAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.ManagementObservationsEnabledCondition @ConditionalOnProperty (management.observations.annotations.enabled=true) did not find property 'enabled'; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.MicrometerObservationsEnabledCondition @ConditionalOnProperty (micrometer.observations.annotations.enabled=true) did not find property 'enabled' (MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition)
      Matched:
         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopTracerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveHealthEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Sender' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-06-06T14:14:49.690+02:00  INFO 28664 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 0.925 seconds (process running for 3219.324)
2024-06-06T14:14:49.690+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-06-06T14:14:49.690+02:00  INFO 28664 --- [back-end] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-06-06T14:14:49.690+02:00 DEBUG 28664 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-06-06T14:16:17.623+02:00 DEBUG 28664 --- [back-end] [SpringApplicationShutdownHook] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-06-06T14:16:17.623+02:00 DEBUG 28664 --- [back-end] [SpringApplicationShutdownHook] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b58f54, started on Thu Jun 06 14:14:48 CEST 2024
2024-06-06T14:16:17.628+02:00  INFO 28664 --- [back-end] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T14:16:17.629+02:00  INFO 28664 --- [back-end] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown initiated...
2024-06-06T14:16:17.629+02:00  INFO 28664 --- [back-end] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown completed.
2024-06-06T14:42:47.159+02:00  INFO 18000 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Starting BackEndApplication using Java 22.0.1 with PID 18000 (C:\Users\32579\IdeaProjects\back-end\target\classes started by 32579 in C:\Users\32579\IdeaProjects\back-end)
2024-06-06T14:42:47.160+02:00  INFO 18000 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : No active profile set, falling back to 1 default profile: "default"
2024-06-06T14:42:47.160+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.boot.SpringApplication               : Loading source class com.example.backend.BackEndApplication
2024-06-06T14:42:47.184+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : Matching URLs for reloading : [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-06-06T14:42:47.184+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.d.settings.DevToolsSettings        : Included patterns for restart : []
2024-06-06T14:42:47.184+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.d.settings.DevToolsSettings        : Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
2024-06-06T14:42:47.184+02:00  INFO 18000 --- [back-end] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-06-06T14:42:47.184+02:00  INFO 18000 --- [back-end] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-06-06T14:42:47.184+02:00 DEBUG 18000 --- [back-end] [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6787118f
2024-06-06T14:42:47.760+02:00  INFO 18000 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-06T14:42:47.769+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.example.backend'. Automatic @Repository and @Entity scanning is enabled.
2024-06-06T14:42:47.797+02:00  INFO 18000 --- [back-end] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 32 ms. Found 7 JPA repository interfaces.
2024-06-06T14:42:47.943+02:00  WARN 18000 --- [back-end] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-06-06T14:42:47.957+02:00  INFO 18000 --- [back-end] [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2024-06-06T14:42:48.231+02:00 DEBUG 18000 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T14:42:48.231+02:00 DEBUG 18000 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : Code archive: C:\Users\32579\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2024-06-06T14:42:48.231+02:00 DEBUG 18000 --- [back-end] [restartedMain] .s.b.w.e.t.TomcatServletWebServerFactory : None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-06-06T14:42:48.254+02:00  INFO 18000 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-06-06T14:42:48.263+02:00  INFO 18000 --- [back-end] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-06-06T14:42:48.263+02:00  INFO 18000 --- [back-end] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-06-06T14:42:48.297+02:00  INFO 18000 --- [back-end] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-06-06T14:42:48.297+02:00 DEBUG 18000 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-06-06T14:42:48.297+02:00  INFO 18000 --- [back-end] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1113 ms
2024-06-06T14:42:48.380+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-06-06T14:42:48.380+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/], messageDispatcherServlet urls=[/services/*]
2024-06-06T14:42:48.393+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedRequestContextFilter  : Filter 'requestContextFilter' configured for use
2024-06-06T14:42:48.394+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2024-06-06T14:42:48.395+02:00 DEBUG 18000 --- [back-end] [restartedMain] s.b.w.s.f.OrderedCharacterEncodingFilter : Filter 'characterEncodingFilter' configured for use
2024-06-06T14:42:48.395+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.w.s.f.OrderedFormContentFilter     : Filter 'formContentFilter' configured for use
2024-06-06T14:42:48.486+02:00  INFO 18000 --- [back-end] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-06T14:42:48.536+02:00  INFO 18000 --- [back-end] [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-06-06T14:42:48.561+02:00  INFO 18000 --- [back-end] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-06-06T14:42:48.735+02:00  INFO 18000 --- [back-end] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-06T14:42:48.757+02:00  INFO 18000 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-06-06T14:42:48.877+02:00  INFO 18000 --- [back-end] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e4ccf11
2024-06-06T14:42:48.878+02:00  INFO 18000 --- [back-end] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-06-06T14:42:48.911+02:00  WARN 18000 --- [back-end] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-06T14:42:49.650+02:00  INFO 18000 --- [back-end] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-06T14:42:49.744+02:00  INFO 18000 --- [back-end] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-06T14:42:50.054+02:00  WARN 18000 --- [back-end] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-06T14:42:50.136+02:00 DEBUG 18000 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 43 mappings in 'requestMappingHandlerMapping'
2024-06-06T14:42:50.213+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-06-06T14:42:50.238+02:00 DEBUG 18000 --- [back-end] [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-06-06T14:42:50.267+02:00 DEBUG 18000 --- [back-end] [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-06-06T14:42:50.472+02:00 DEBUG 18000 --- [back-end] [restartedMain] inMXBeanRegistrar$SpringApplicationAdmin : Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-06-06T14:42:50.532+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.d.livereload.LiveReloadServer      : Starting live reload server on port 35729
2024-06-06T14:42:50.533+02:00  INFO 18000 --- [back-end] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-06-06T14:42:50.538+02:00  INFO 18000 --- [back-end] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-06-06T14:42:50.585+02:00  INFO 18000 --- [back-end] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-06-06T14:42:50.595+02:00 DEBUG 18000 --- [back-end] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a single bean 'mbeanServer' (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.name app.log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration#observedAspect matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.aop.ObservedAspect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksObservabilityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebServiceTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.ws.client.core.WebServiceTemplate', 'org.springframework.oxm.Unmarshaller', 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServiceTemplateAutoConfiguration#webServiceTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.webservices.client.WebServiceTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebServicesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.ws.config.annotation.WsConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.jcache.JCacheCache', 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension:
      Did not match:
         - @ConditionalOnAvailableEndpoint no 'management.endpoints' property marked it as exposed (OnAvailableEndpointCondition)
      Matched:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MetricsAspectsAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.ManagementObservationsEnabledCondition @ConditionalOnProperty (management.observations.annotations.enabled=true) did not find property 'enabled'; NestedCondition on MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition.MicrometerObservationsEnabledCondition @ConditionalOnProperty (micrometer.observations.annotations.enabled=true) did not find property 'enabled' (MetricsAspectsAutoConfiguration.ObservationAnnotationsEnabledCondition)
      Matched:
         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopTracerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveHealthEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServicesAutoConfiguration#wsdlDefinitionBeanFactoryPostProcessor:
      Did not match:
         - WSDL locations did not find property spring.webservices.wsdl-locations (OnWsdlLocationsCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Sender' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-06-06T14:42:50.598+02:00  INFO 18000 --- [back-end] [restartedMain] com.example.backend.BackEndApplication   : Started BackEndApplication in 3.646 seconds (process running for 4.073)
2024-06-06T14:42:50.600+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2024-06-06T14:42:50.601+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.boot.devtools.restart.Restarter      : Creating new Restarter for thread Thread[#1,main,5,main]
2024-06-06T14:42:50.601+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.boot.devtools.restart.Restarter      : Immediately restarting application
2024-06-06T14:42:50.601+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.boot.devtools.restart.Restarter      : Starting application com.example.backend.BackEndApplication with URLs [file:/C:/Users/32579/IdeaProjects/back-end/target/classes/]
2024-06-06T14:42:50.602+02:00 DEBUG 18000 --- [back-end] [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-06-06T14:42:50.697+02:00  INFO 18000 --- [back-end] [RMI TCP Connection(2)-172.20.9.211] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-06T14:42:50.697+02:00  INFO 18000 --- [back-end] [RMI TCP Connection(2)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-06-06T14:42:50.697+02:00 DEBUG 18000 --- [back-end] [RMI TCP Connection(2)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2024-06-06T14:42:50.697+02:00 DEBUG 18000 --- [back-end] [RMI TCP Connection(2)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2024-06-06T14:42:50.697+02:00 DEBUG 18000 --- [back-end] [RMI TCP Connection(2)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2024-06-06T14:42:50.698+02:00 DEBUG 18000 --- [back-end] [RMI TCP Connection(2)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6d44660d
2024-06-06T14:42:50.698+02:00 DEBUG 18000 --- [back-end] [RMI TCP Connection(2)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@3a884027
2024-06-06T14:42:50.698+02:00 DEBUG 18000 --- [back-end] [RMI TCP Connection(2)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-06-06T14:42:50.698+02:00  INFO 18000 --- [back-end] [RMI TCP Connection(2)-172.20.9.211] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-06-06T14:42:53.559+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/dashboard", parameters={}
2024-06-06T14:42:53.564+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getAllInformation()
2024-06-06T14:42:53.651+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T14:42:53.661+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.676+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.677+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.678+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.680+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.680+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.681+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.682+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.682+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.683+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.683+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.684+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.685+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.686+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.688+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.689+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.689+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.690+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.691+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.692+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:53.734+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T14:42:53.737+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.739+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.740+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.741+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.742+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.742+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.743+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.744+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.744+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.745+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.745+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.746+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.746+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.747+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.748+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.748+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.748+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.749+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.750+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.752+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.752+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.753+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.754+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.755+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.756+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.756+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.757+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.757+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.757+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.758+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.759+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.759+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:53.763+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T14:42:53.766+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-06-06T14:42:53.767+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.firstname,
        u1_0.lastname,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        _user u1_0
2024-06-06T14:42:53.770+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T14:42:53.775+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T14:42:53.786+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T14:42:53.791+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.793+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.795+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.798+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.798+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.799+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.801+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.803+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.805+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.807+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.807+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.809+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.812+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.814+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:53.816+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:53.817+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:53.817+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.818+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.819+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.820+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:53.820+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.821+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.821+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.822+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:53.823+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.824+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.825+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:53.826+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.826+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.827+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.827+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.828+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:53.830+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.832+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.833+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:53.835+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.836+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.836+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.837+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.839+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.840+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.841+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.842+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.842+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.843+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.844+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.844+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.846+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.847+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.848+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.849+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.850+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.850+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.851+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.853+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.853+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.854+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.855+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.855+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.856+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.856+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.857+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.857+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.859+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.860+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.860+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.861+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.862+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.863+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.864+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.864+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.864+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.866+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.867+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.868+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.868+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.869+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.870+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.871+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.871+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.871+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.872+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.873+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.873+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.874+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.875+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:53.875+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.875+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:53.880+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:53.881+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:53.881+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.882+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.882+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.883+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.883+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.883+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.884+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.884+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.885+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.885+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.885+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.886+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.886+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.887+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.887+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.888+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.888+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.888+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.888+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.889+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.889+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.889+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.890+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.891+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.891+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.892+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.893+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.893+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.894+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.894+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.895+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.895+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.896+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.896+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.896+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.897+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.897+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.897+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.898+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.898+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.899+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.900+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.900+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.901+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.901+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.902+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.902+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.902+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.902+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.903+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.903+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.904+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.904+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.905+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.905+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.906+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.906+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.907+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.907+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.908+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.909+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.909+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.910+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.910+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.910+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.911+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.911+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.911+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.912+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.912+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.912+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.913+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.913+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.913+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.914+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.914+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.915+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.915+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.915+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.916+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.916+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.916+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.917+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.917+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.918+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.919+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.920+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.920+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.921+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.921+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.922+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.922+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.923+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.923+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.924+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.924+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.925+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.925+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.925+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.926+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.926+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.927+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.927+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.928+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.928+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.928+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.928+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.930+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.930+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.930+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.931+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.931+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.932+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.932+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.934+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.934+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.934+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.935+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.935+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.935+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.935+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.936+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.936+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.936+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.936+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.937+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.937+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.937+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.937+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.938+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.938+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.938+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.938+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.938+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.939+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.940+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:53.940+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:53.941+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.941+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.941+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.942+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.942+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.942+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.942+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.943+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.943+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.943+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.943+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.944+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.944+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.944+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.944+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.945+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.945+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.945+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.946+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.946+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.946+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.946+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.946+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.947+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.947+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.947+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.947+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.947+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.948+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.948+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.948+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.950+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.950+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.950+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.951+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.951+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.952+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.952+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.952+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.953+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.953+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.953+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.953+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.953+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.953+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.954+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.954+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.954+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.954+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:53.955+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.955+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.955+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.955+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.956+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:53.964+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [DashBoardAllInformation(tableList=[Table(id=11, name=Table 11, seats_amount=4, status=Now_Occupied,  (truncated)...]
2024-06-06T14:42:53.998+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/dashboard", parameters={}
2024-06-06T14:42:53.998+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getAllInformation()
2024-06-06T14:42:54.001+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0
2024-06-06T14:42:54.005+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.007+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.007+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.008+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.008+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.008+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.010+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.010+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.011+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.011+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.011+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.012+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.012+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.013+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.013+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.014+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.014+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.015+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.015+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.015+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.017+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T14:42:54.025+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T14:42:54.026+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/dashboard/reservations-per-day", parameters={}
2024-06-06T14:42:54.027+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getReservationsPerDay()
2024-06-06T14:42:54.028+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.031+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.033+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.034+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.035+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.035+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.035+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.036+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.036+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.037+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.037+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.037+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.038+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.038+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.038+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.039+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.040+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.041+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.041+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.042+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.042+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.043+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.044+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.045+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.047+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.048+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.049+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.050+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.050+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.051+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.052+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.052+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:54.056+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T14:42:54.058+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date between ? and ?
2024-06-06T14:42:54.059+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0
2024-06-06T14:42:54.060+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.061+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.061+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.063+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.063+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.063+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.063+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.firstname,
        u1_0.lastname,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        _user u1_0
2024-06-06T14:42:54.063+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.063+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.063+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.063+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.064+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.064+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.064+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.065+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.065+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.065+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.066+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.066+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T14:42:54.072+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T14:42:54.072+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T14:42:54.072+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [{MONDAY=5, THURSDAY=9, WEDNESDAY=6, SUNDAY=6, SATURDAY=1, FRIDAY=3, TUESDAY=8}]
2024-06-06T14:42:54.074+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T14:42:54.074+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T14:42:54.074+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.075+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.077+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.078+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.079+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.079+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.080+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.080+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.082+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.083+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.083+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.084+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.084+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.085+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:54.086+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:54.086+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:54.087+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.087+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.088+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.089+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:54.090+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.091+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.092+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.093+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:54.095+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.096+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.096+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:54.097+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.097+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.098+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.099+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.099+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:54.100+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.100+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.101+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:54.101+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.102+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.102+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.103+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.104+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.104+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.104+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.104+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.105+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.105+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.106+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.106+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.108+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.111+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.122+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.126+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.130+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.131+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.132+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.134+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.134+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.135+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.136+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.136+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.137+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.138+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.140+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.141+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.142+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.142+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.143+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.144+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.145+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.146+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.147+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.147+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.148+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.148+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.149+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.149+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.150+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.151+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.151+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.152+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.152+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.152+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.153+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.153+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.154+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.154+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.155+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:54.155+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.155+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:54.156+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:54.156+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:54.157+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.157+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.157+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.158+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.158+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.158+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.158+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.160+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.160+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.160+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.161+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.161+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.161+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.161+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.162+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.162+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.162+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.163+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.163+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.163+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.163+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.164+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.164+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.165+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.165+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.165+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.165+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.166+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.166+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.166+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.166+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.166+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.167+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.167+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.167+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.167+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.168+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.168+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.168+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.168+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.168+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.169+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.169+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.169+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.169+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.170+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.170+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.170+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.170+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.171+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.171+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.171+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.172+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.172+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.172+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.173+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.173+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.173+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.174+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.174+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.174+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.175+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.175+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.175+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.175+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.176+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.176+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.176+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.176+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.177+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.177+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.177+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.178+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.178+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.178+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.178+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.178+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.180+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.180+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.180+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.180+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.180+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.181+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.181+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.181+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.182+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.182+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.182+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.182+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.182+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.183+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.183+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.183+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.183+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.184+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.184+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.184+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.184+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.185+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.185+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.186+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.186+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.187+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.187+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.188+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.188+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.188+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.189+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.189+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.189+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.189+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.189+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.190+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.190+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.190+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.191+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.191+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.192+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.192+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.192+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.192+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.193+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.193+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.193+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.193+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.195+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.195+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.195+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.195+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.195+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.196+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.196+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.196+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.197+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.197+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.200+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:54.203+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:54.206+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.206+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.208+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.209+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.222+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.222+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.222+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.223+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.223+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.223+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.223+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.224+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.224+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.224+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.225+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.225+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.225+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.226+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.226+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.226+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.227+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.227+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.227+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.228+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.228+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.228+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.229+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.229+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.229+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.230+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.230+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.230+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.230+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.230+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.230+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.231+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.231+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.231+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.231+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.232+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.232+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.232+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.232+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.233+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.233+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.233+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.234+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.234+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.235+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:54.235+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.237+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:54.241+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [DashBoardAllInformation(tableList=[Table(id=11, name=Table 11, seats_amount=4, status=Now_Occupied,  (truncated)...]
2024-06-06T14:42:54.259+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T14:42:54.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/dashboard/reservations-per-day", parameters={}
2024-06-06T14:42:54.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.DashboardController#getReservationsPerDay()
2024-06-06T14:42:54.274+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.table_id,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.date between ? and ?
2024-06-06T14:42:54.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.279+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.279+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.279+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.280+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.280+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.280+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.280+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.281+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.281+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.281+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.282+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.282+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:54.284+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T14:42:54.284+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [{MONDAY=5, THURSDAY=9, WEDNESDAY=6, SUNDAY=6, SATURDAY=1, FRIDAY=3, TUESDAY=8}]
2024-06-06T14:42:54.287+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T14:42:55.229+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-06-06T14:42:55.229+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-06-06T14:42:55.233+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T14:42:55.233+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.233+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.234+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.234+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.234+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.235+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.235+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.235+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.235+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.235+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.235+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.235+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.236+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.237+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.237+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.237+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.237+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.237+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.237+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.238+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.238+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.238+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.238+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.240+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.240+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.240+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.241+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T14:42:55.243+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T14:42:55.244+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T14:42:55.244+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.244+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.244+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.244+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.245+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.245+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.246+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.246+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.247+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.247+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.247+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.248+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.248+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.249+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.249+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.249+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.251+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.251+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.251+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.251+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.251+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.253+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.253+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.253+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.254+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.254+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.255+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.255+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.255+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.255+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.255+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.256+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.256+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.256+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.256+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.256+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.256+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.256+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.257+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.258+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.258+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.258+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.258+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.258+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.258+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.258+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.258+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.259+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.259+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.259+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.259+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.259+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.259+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.259+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.260+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.260+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.260+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.260+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.260+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.260+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.260+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.261+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.261+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.261+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.261+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.261+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.261+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.261+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.261+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.261+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.262+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.262+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.262+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.262+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.262+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.262+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.262+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.262+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.263+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.264+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.264+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.264+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.264+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.264+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.264+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.264+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.265+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.265+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.265+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.265+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.265+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.265+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.265+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.265+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.265+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.266+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.267+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.267+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.267+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.267+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.268+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.268+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.268+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.268+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.268+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.268+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.268+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.269+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.270+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.271+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.272+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.272+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.272+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.272+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.272+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.272+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.272+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.272+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.273+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.273+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.273+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.273+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.273+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.273+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.273+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.275+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.275+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.275+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.275+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.275+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.275+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.275+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.275+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.275+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.276+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.277+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.278+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.279+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-06-06T14:42:55.281+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T14:42:55.282+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/menu/menu-all-list", parameters={}
2024-06-06T14:42:55.282+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.MenuController#getAllData()
2024-06-06T14:42:55.284+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.menu_section_id,
        m1_0.price 
    from
        _meal m1_0
2024-06-06T14:42:55.284+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.285+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.285+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.285+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.286+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.286+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.286+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.286+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.286+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.287+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.287+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.287+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.287+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.287+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.288+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.290+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.290+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.291+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.291+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.291+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.291+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.291+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.292+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        m1_0.id,
        m1_0.title,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    left join
        _menu m1_0 
            on m1_0.id=ms1_0.menu_id 
    where
        ms1_0.id=?
2024-06-06T14:42:55.293+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.id,
        ms1_0.menu_id,
        ms1_0.title_section 
    from
        _menusection ms1_0
2024-06-06T14:42:55.294+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.title 
    from
        _menu m1_0
2024-06-06T14:42:55.295+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T14:42:55.295+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.295+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.295+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.296+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.296+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.296+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.297+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.297+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.298+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.298+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.298+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.299+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.299+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.300+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.300+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.300+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.300+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.300+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.301+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.301+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.302+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.302+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:55.302+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.303+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:55.303+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.303+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:55.304+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.304+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.304+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.304+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.304+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.304+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.305+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.305+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.305+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.305+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.305+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.305+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.306+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.307+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.308+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.308+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.308+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.308+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.308+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.308+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.308+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.309+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.309+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.310+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.310+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.310+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.310+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.310+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.310+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.310+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.310+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.311+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.312+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.313+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.314+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.315+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.315+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.315+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.315+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.315+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.315+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.315+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.318+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.318+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.318+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.318+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.319+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.319+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.319+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.319+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.319+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.319+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.320+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.320+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.320+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.320+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.320+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.320+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.320+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.320+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.321+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.321+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.321+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.321+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.321+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.321+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.321+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.322+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.322+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.322+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.322+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.322+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.322+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.322+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.322+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.323+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.323+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.323+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.323+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.323+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.323+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.323+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.323+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.323+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.324+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.324+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.324+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:55.324+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.324+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.324+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.324+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.324+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.324+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.325+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.325+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.325+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.325+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.325+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.325+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.325+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.325+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.325+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.326+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.326+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.326+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.326+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.326+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.326+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.326+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.326+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.327+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.327+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.327+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.327+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.327+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.327+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.327+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.327+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.328+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.328+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.328+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.328+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.328+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.330+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:55.331+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.331+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.331+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.331+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.331+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:55.331+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [MenuAllInformation(meals=[Meal(id=1, price=20.00, meal_name=TestingMealName1, meal_description=nothi (truncated)...]
2024-06-06T14:42:55.332+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T14:42:56.457+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-06-06T14:42:56.457+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-06-06T14:42:56.458+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T14:42:56.459+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:56.459+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:56.459+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:56.460+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T14:42:56.460+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.460+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:56.461+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:56.461+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.461+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.461+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.461+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.461+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.462+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.462+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.462+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.463+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.463+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.463+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.464+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.464+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.464+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.465+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.465+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.465+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.466+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.466+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.467+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.467+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.467+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.467+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.468+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.468+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.468+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.468+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.469+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.469+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.469+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.470+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-06-06T14:42:56.470+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T14:42:56.473+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/orders", parameters={}
2024-06-06T14:42:56.473+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.backend.controllers.OrderController#getAllOrders()
2024-06-06T14:42:56.475+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status,
        o1_0.table_id 
    from
        _order o1_0
2024-06-06T14:42:56.475+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:56.476+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:56.476+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        _table t1_0 
    where
        t1_0.id=?
2024-06-06T14:42:56.476+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-06-06T14:42:56.477+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.477+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:56.477+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ms1_0.menu_id,
        ms1_0.id,
        ms1_0.title_section 
    from
        _menusection ms1_0 
    where
        ms1_0.menu_id=?
2024-06-06T14:42:56.477+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.478+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.478+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.478+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.478+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.478+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.478+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.480+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.481+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.481+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.481+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.482+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.482+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.482+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.482+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.483+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.483+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.484+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.484+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.484+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.order_id,
        m1_1.id,
        m1_1.meal_description,
        m1_1.meal_name,
        ms1_0.id,
        m2_0.id,
        m2_0.title,
        ms1_0.title_section,
        m1_1.price 
    from
        order_meal m1_0 
    join
        _meal m1_1 
            on m1_1.id=m1_0.meal_id 
    left join
        _menusection ms1_0 
            on ms1_0.id=m1_1.menu_section_id 
    left join
        _menu m2_0 
            on m2_0.id=ms1_0.menu_id 
    where
        m1_0.order_id=?
2024-06-06T14:42:56.484+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.485+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.table_id,
        o1_0.id,
        o1_0.customer_name,
        o1_0.order_date,
        o1_0.status 
    from
        _order o1_0 
    where
        o1_0.table_id=?
2024-06-06T14:42:56.485+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.485+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        r1_0.table_id,
        r1_0.id,
        r1_0.date,
        r1_0.reservation_type,
        r1_0.reservation_description,
        r1_0.time 
    from
        _reservation r1_0 
    where
        r1_0.table_id=?
2024-06-06T14:42:56.486+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.486+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.486+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.486+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.menu_section_id,
        m1_0.id,
        m1_0.meal_description,
        m1_0.meal_name,
        m1_0.price 
    from
        _meal m1_0 
    where
        m1_0.menu_section_id=?
2024-06-06T14:42:56.486+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.487+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        o1_0.meal_id,
        o1_1.id,
        o1_1.customer_name,
        o1_1.order_date,
        o1_1.status,
        t1_0.id,
        t1_0.name,
        t1_0.seats_amount,
        t1_0.status 
    from
        order_meal o1_0 
    join
        _order o1_1 
            on o1_1.id=o1_0.order_id 
    left join
        _table t1_0 
            on t1_0.id=o1_1.table_id 
    where
        o1_0.meal_id=?
2024-06-06T14:42:56.487+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [[Order(id=1, orderDate=2024-05-22T12:00, customerName=TestingUser1, meals=[], table=Table(id=1, name (truncated)...]
2024-06-06T14:42:56.488+02:00 DEBUG 18000 --- [back-end] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2024-06-06T14:55:13.825+02:00  WARN 18000 --- [back-end] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m54s662ms473µs900ns).
